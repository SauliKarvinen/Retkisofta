{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauli\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\JAMK\\\\retkisofta\\\\retkiohjelma\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGl from \"react-map-gl\";\nimport Valikot from \"./Valikot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst access_token = \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\nconst API_URL = \"https://tulikartta.fi/api-json2.php\";\nlet dropmenuMaakunnatIsVisible = false;\nlet dropmenuTyypitIsVisible = false;\n\nfunction App() {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    latitude: 62,\n    longitude: 25,\n    zoom: 5\n  });\n  const [paikat, setPaikat] = useState([]);\n  const [maakunnat, setMaakunnat] = useState([]);\n  const [tyyppi, setTyyppi] = useState([]);\n  useEffect(() => {\n    fetch(API_URL, {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }).then(response => {\n      console.log(response);\n      return response.json();\n    }).then(jsonData => {\n      const paikatArr = [...jsonData];\n      const maakunnatArr = [];\n      const tyypitArr = [];\n\n      for (let i of paikatArr) {\n        maakunnatArr.push(i.maakunta);\n        tyypitArr.push(i.tyyppi);\n      }\n\n      const maakunnatRemoveDuplicates = [...new Set(maakunnatArr)];\n      const tyypitRemoveDublicates = [...new Set(tyypitArr)];\n      console.log(\"tyypit:\", tyypitRemoveDublicates);\n      setPaikat({ ...jsonData\n      });\n      setMaakunnat({ ...maakunnatRemoveDuplicates\n      });\n    });\n  }, []);\n\n  const luoMaakuntaValikko = () => {\n    let selectBox = document.getElementById(\"inputMaakunnat\");\n    const options = Object.values(maakunnat).map(maakunta => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"valinnat\",\n      onClick: e => {\n        selectBox.value = e.target.innerHTML;\n        selectBox.focus();\n        document.getElementById(\"container\").style.display = \"none\";\n        dropmenuMaakunnatIsVisible = false;\n      },\n      children: maakunta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"maakunnatContainer\",\n      className: \"options\",\n      style: {\n        display: \"none\"\n      },\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  };\n\n  const luoTyypitValikko = () => {\n    let selectBox = document.getElementById(\"inputTyypi\");\n    const options = Object.values(tyypit).map(tyyppi => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"valinnat\",\n      onClick: e => {\n        selectBox.value = e.target.innerHTML;\n        selectBox.focus();\n        document.getElementById(\"tyypitContainer\").style.display = \"none\";\n        dropmenuTyypitIsVisible = false;\n      },\n      children: tyyppi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"tyypitContainer\",\n      className: \"options\",\n      style: {\n        display: \"none\"\n      },\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  };\n\n  const naytaMaakunnat = () => {\n    //document.getElementById(\"container\").style.display = \"initial\";\n    let valikko = document.getElementById(\"maakunnatContainer\");\n    dropmenuMaakunnatIsVisible = !dropmenuMaakunnatIsVisible;\n\n    if (dropmenuMaakunnatIsVisible) {\n      valikko.style.display = \"block\";\n    } else {\n      valikko.style.display = \"none\";\n    }\n  };\n\n  const naytaTyypit = () => {\n    let valikko = document.getElementById(\"tyypitContainer\");\n    dropmenuTyypitIsVisible = !dropmenuTyypitIsVisible;\n\n    if (dropmenuTyypitIsVisible) {\n      valikko.style.display = \"block\";\n    } else {\n      valikko.style.display = \"none\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"inputMaakunnat\",\n      type: \"text\",\n      onClick: () => naytaMaakunnat(),\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), luoMaakuntaValikko(), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"inputTyypit\",\n      type: \"text\",\n      onClick: () => {\n        naytaTyypit();\n      },\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), luoTyypitValikko, /*#__PURE__*/_jsxDEV(ReactMapGl, {\n      className: \"map\",\n      ...viewport,\n      mapboxApiAccessToken: access_token,\n      mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n      height: 800,\n      width: 600,\n      onViewportChange: viewport => {\n        setViewport(viewport);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aGXa/1CcyX8rlleIgeb8Uvbr1Ms=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/sauli/OneDrive/Työpöytä/JAMK/retkisofta/retkiohjelma/src/App.js"],"names":["React","useState","useEffect","ReactMapGl","Valikot","access_token","API_URL","dropmenuMaakunnatIsVisible","dropmenuTyypitIsVisible","App","viewport","setViewport","latitude","longitude","zoom","paikat","setPaikat","maakunnat","setMaakunnat","tyyppi","setTyyppi","fetch","Accept","then","response","console","log","json","jsonData","paikatArr","maakunnatArr","tyypitArr","i","push","maakunta","maakunnatRemoveDuplicates","Set","tyypitRemoveDublicates","luoMaakuntaValikko","selectBox","document","getElementById","options","Object","values","map","e","value","target","innerHTML","focus","style","display","luoTyypitValikko","tyypit","naytaMaakunnat","valikko","naytaTyypit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactMapGl from \"react-map-gl\";\nimport Valikot from \"./Valikot\";\n\nconst access_token =\n  \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\nconst API_URL = \"https://tulikartta.fi/api-json2.php\";\nlet dropmenuMaakunnatIsVisible = false;\nlet dropmenuTyypitIsVisible = false;\n\nfunction App() {\n  const [viewport, setViewport] = useState({\n    latitude: 62,\n    longitude: 25,\n    zoom: 5,\n  });\n\n  const [paikat, setPaikat] = useState([]);\n  const [maakunnat, setMaakunnat] = useState([]);\n  const [tyyppi, setTyyppi] = useState([]);\n\n  useEffect(() => {\n    fetch(API_URL, {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    })\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((jsonData) => {\n        const paikatArr = [...jsonData];\n        const maakunnatArr = [];\n        const tyypitArr = [];\n\n        for (let i of paikatArr) {\n          maakunnatArr.push(i.maakunta);\n          tyypitArr.push(i.tyyppi);\n        }\n        const maakunnatRemoveDuplicates = [...new Set(maakunnatArr)];\n        const tyypitRemoveDublicates = [...new Set(tyypitArr)];\n        console.log(\"tyypit:\", tyypitRemoveDublicates);\n\n        setPaikat({ ...jsonData });\n        setMaakunnat({ ...maakunnatRemoveDuplicates });\n      });\n  }, []);\n\n  const luoMaakuntaValikko = () => {\n    let selectBox = document.getElementById(\"inputMaakunnat\");\n    const options = Object.values(maakunnat).map((maakunta) => (\n      <p\n        className=\"valinnat\"\n        onClick={(e) => {\n          selectBox.value = e.target.innerHTML;\n          selectBox.focus();\n          document.getElementById(\"container\").style.display = \"none\";\n          dropmenuMaakunnatIsVisible = false;\n        }}\n      >\n        {maakunta}\n      </p>\n    ));\n\n    return (\n      <div\n        id={\"maakunnatContainer\"}\n        className=\"options\"\n        style={{ display: \"none\" }}\n      >\n        {options}\n      </div>\n    );\n  };\n\n  \n  const luoTyypitValikko = () => {\n\n    let selectBox = document.getElementById(\"inputTyypi\");\n    const options = Object.values(tyypit).map((tyyppi) => (\n      <p\n        className=\"valinnat\"\n        onClick={(e) => {\n          selectBox.value = e.target.innerHTML;\n          selectBox.focus();\n          document.getElementById(\"tyypitContainer\").style.display = \"none\";\n          dropmenuTyypitIsVisible = false;\n        }}\n      >\n        {tyyppi}\n      </p>\n    ));\n\n    return (\n      <div\n        id={\"tyypitContainer\"}\n        className=\"options\"\n        style={{ display: \"none\" }}\n      >\n        {options}\n      </div>\n    );\n      \n  };\n\n  const naytaMaakunnat = () => {\n    //document.getElementById(\"container\").style.display = \"initial\";\n    let valikko = document.getElementById(\"maakunnatContainer\");\n\n    dropmenuMaakunnatIsVisible = !dropmenuMaakunnatIsVisible;\n    if (dropmenuMaakunnatIsVisible) {\n      valikko.style.display = \"block\";\n    } else {\n      valikko.style.display = \"none\";\n    }\n  };\n\n  const naytaTyypit = () => {\n    let valikko = document.getElementById(\"tyypitContainer\");\n\n    dropmenuTyypitIsVisible = !dropmenuTyypitIsVisible;\n    if (dropmenuTyypitIsVisible) {\n      valikko.style.display = \"block\";\n    } else {\n      valikko.style.display = \"none\";\n    }\n  };\n\n  return (\n    <div>\n      <input\n        id={\"inputMaakunnat\"}\n        type={\"text\"}\n        onClick={() => naytaMaakunnat()}\n        readOnly\n      ></input>\n\n      {luoMaakuntaValikko()}\n\n      <input\n        id={\"inputTyypit\"}\n        type={\"text\"}\n        onClick={() => {\n          naytaTyypit();\n        }}\n        readOnly\n      ></input>\n\n      {luoTyypitValikko}\n\n      <ReactMapGl\n        className=\"map\"\n        {...viewport}\n        mapboxApiAccessToken={access_token}\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n        height={800}\n        width={600}\n        onViewportChange={(viewport) => {\n          setViewport(viewport);\n        }}\n      ></ReactMapGl>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}