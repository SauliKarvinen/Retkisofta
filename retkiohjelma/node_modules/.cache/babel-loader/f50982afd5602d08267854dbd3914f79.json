{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauli\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\JAMK\\\\retkisofta\\\\retkiohjelma\\\\src\\\\BarChart.js\",\n    _s = $RefreshSig$();\n\nimport { _adapters } from \"chart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BarChart(props) {\n  _s();\n\n  const [tyypit, setTyypit] = useState(props.tyypit);\n  const [paikatMaakunnassa, setPaikatMaakunnassa] = useState(props.paikatMaakunnassa);\n  const [tyyppimaarat, setTyyppimaarat] = useState([]);\n  const [prosetit, setProsentit] = useState([]);\n  useEffect(() => {\n    setTyypit(props.tyypit);\n  }, [props.tyypit]);\n  useEffect(() => {\n    setPaikatMaakunnassa(props.paikatMaakunnassa);\n    laskeMaarat();\n    laskeProsentit();\n  }, [props.paikatMaakunnassa]);\n\n  const laskeMaarat = () => {\n    let laavut = 0;\n    let kodat = 0;\n    let paivatuvat = 0;\n    let nuotiopaikat = 0;\n    let luolat = 0;\n    let auotiotuvat = 0;\n    let ruokailukatokset = 0;\n    let nahtavyydet = 0;\n    let lintutornit = 0;\n    let varaustuvat = 0;\n    let kammit = 0;\n    let porokampat = 0;\n    let lahteet = 0;\n    let maarat = [];\n\n    async function f() {\n      for (let paikka of props.paikatMaakunnassa) {\n        switch (paikka.tyyppi) {\n          case \"Laavu\":\n            laavut++;\n            break;\n\n          case \"Kota\":\n            kodat++;\n            break;\n\n          case \"Päivätupa\":\n            paivatuvat++;\n            break;\n\n          case \"Nuotiopaikka\":\n            nuotiopaikat++;\n            break;\n\n          case \"Luola\":\n            luolat++;\n            break;\n\n          case \"Autiotupa\":\n            auotiotuvat++;\n            break;\n\n          case \"Ruokailukatos\":\n            ruokailukatokset++;\n            break;\n\n          case \"Nähtävyys\":\n            nahtavyydet++;\n            break;\n\n          case \"Lintutorni\":\n            lintutornit++;\n            break;\n\n          case \"Varaustupa\":\n            varaustuvat++;\n            break;\n\n          case \"Kammi\":\n            kammit++;\n            break;\n\n          case \"Porokämppä\":\n            porokampat++;\n            break;\n\n          case \"Lähde\":\n            lahteet++;\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n\n    f().then(() => {\n      maarat = [laavut, kodat, paivatuvat, nuotiopaikat, luolat, auotiotuvat, ruokailukatokset, nahtavyydet, lintutornit, varaustuvat, kammit, porokampat, lahteet];\n      setTyyppimaarat(maarat);\n    });\n  };\n\n  const laskeProsentit = () => {\n    const paikkoja = props.paikatMaakunnassa.length;\n    const pros = props.paikatMaakunnassa.forEach(maara => maara / paikkoja * 100);\n    console.log(\"prosenttiarray:\", pros);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"barchart-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: {\n          labels: [...tyypit],\n          datasets: [{\n            label: \"test\",\n            data: [...tyyppimaarat],\n            backgroundColor: \"blue\"\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piechart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: {\n            labels: [\"A\", \"B\", \"C\", \"D\"],\n            datasets: [{\n              label: \"test\",\n              data: [1, 2, 3, 4],\n              backgroundColor: \"blue\"\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BarChart, \"BVzMqrFvn/lIcOyVsVicd2jJhIc=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["C:/Users/sauli/OneDrive/Työpöytä/JAMK/retkisofta/retkiohjelma/src/BarChart.js"],"names":["_adapters","React","useState","useEffect","Bar","Pie","BarChart","props","tyypit","setTyypit","paikatMaakunnassa","setPaikatMaakunnassa","tyyppimaarat","setTyyppimaarat","prosetit","setProsentit","laskeMaarat","laskeProsentit","laavut","kodat","paivatuvat","nuotiopaikat","luolat","auotiotuvat","ruokailukatokset","nahtavyydet","lintutornit","varaustuvat","kammit","porokampat","lahteet","maarat","f","paikka","tyyppi","then","paikkoja","length","pros","forEach","maara","console","log","labels","datasets","label","data","backgroundColor"],"mappings":"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","sourcesContent":["import { _adapters } from \"chart.js\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nfunction BarChart(props) {\r\n  const [tyypit, setTyypit] = useState(props.tyypit);\r\n  const [paikatMaakunnassa, setPaikatMaakunnassa] = useState(\r\n    props.paikatMaakunnassa\r\n  );\r\n  const [tyyppimaarat, setTyyppimaarat] = useState([]);\r\n  const [prosetit, setProsentit] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTyypit(props.tyypit);\r\n  }, [props.tyypit]);\r\n\r\n  useEffect(() => {\r\n    setPaikatMaakunnassa(props.paikatMaakunnassa);\r\n    laskeMaarat();\r\n    laskeProsentit();\r\n  }, [props.paikatMaakunnassa]);\r\n\r\n  const laskeMaarat = () => {\r\n    let laavut = 0;\r\n    let kodat = 0;\r\n    let paivatuvat = 0;\r\n    let nuotiopaikat = 0;\r\n    let luolat = 0;\r\n    let auotiotuvat = 0;\r\n    let ruokailukatokset = 0;\r\n    let nahtavyydet = 0;\r\n    let lintutornit = 0;\r\n    let varaustuvat = 0;\r\n    let kammit = 0;\r\n    let porokampat = 0;\r\n    let lahteet = 0;\r\n    let maarat = [];\r\n\r\n    async function f() {\r\n      for (let paikka of props.paikatMaakunnassa) {\r\n        switch (paikka.tyyppi) {\r\n          case \"Laavu\":\r\n            laavut++;\r\n            break;\r\n          case \"Kota\":\r\n            kodat++;\r\n            break;\r\n          case \"Päivätupa\":\r\n            paivatuvat++;\r\n            break;\r\n          case \"Nuotiopaikka\":\r\n            nuotiopaikat++;\r\n            break;\r\n          case \"Luola\":\r\n            luolat++;\r\n            break;\r\n          case \"Autiotupa\":\r\n            auotiotuvat++;\r\n            break;\r\n          case \"Ruokailukatos\":\r\n            ruokailukatokset++;\r\n            break;\r\n          case \"Nähtävyys\":\r\n            nahtavyydet++;\r\n            break;\r\n          case \"Lintutorni\":\r\n            lintutornit++;\r\n            break;\r\n          case \"Varaustupa\":\r\n            varaustuvat++;\r\n            break;\r\n          case \"Kammi\":\r\n            kammit++;\r\n            break;\r\n          case \"Porokämppä\":\r\n            porokampat++;\r\n            break;\r\n          case \"Lähde\":\r\n            lahteet++;\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    f().then(() => {\r\n      maarat = [\r\n        laavut,\r\n        kodat,\r\n        paivatuvat,\r\n        nuotiopaikat,\r\n        luolat,\r\n        auotiotuvat,\r\n        ruokailukatokset,\r\n        nahtavyydet,\r\n        lintutornit,\r\n        varaustuvat,\r\n        kammit,\r\n        porokampat,\r\n        lahteet,\r\n      ];\r\n      setTyyppimaarat(maarat);\r\n    });\r\n  };\r\n\r\n  const laskeProsentit = () => {\r\n    const paikkoja = props.paikatMaakunnassa.length;\r\n    const pros = props.paikatMaakunnassa.forEach(\r\n      (maara) => (maara / paikkoja) * 100\r\n    );\r\n\r\n    console.log(\"prosenttiarray:\", pros);\r\n  };\r\n\r\n  return (\r\n    <div className=\"charts-wrapper\">\r\n      <div className=\"barchart-wrapper\">\r\n        <Bar\r\n          data={{\r\n            labels: [...tyypit],\r\n            datasets: [\r\n              {\r\n                label: \"test\",\r\n                data: [...tyyppimaarat],\r\n                backgroundColor: \"blue\",\r\n              },\r\n            ],\r\n          }}\r\n        ></Bar>\r\n\r\n        <div className=\"piechart-wrapper\">\r\n          <Pie\r\n            data={{\r\n              labels: [\"A\", \"B\", \"C\", \"D\"],\r\n              datasets: [\r\n                {\r\n                  label: \"test\",\r\n                  data: [1, 2, 3, 4],\r\n                  backgroundColor: \"blue\",\r\n                },\r\n              ],\r\n            }}\r\n          ></Pie>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n"]},"metadata":{},"sourceType":"module"}