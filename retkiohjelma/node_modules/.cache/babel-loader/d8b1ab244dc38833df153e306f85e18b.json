{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauli\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\JAMK\\\\retkisofta\\\\retkiohjelma\\\\src\\\\BarChart.js\",\n    _s = $RefreshSig$();\n\nimport { _adapters } from \"chart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BarChart(props) {\n  _s();\n\n  const [tyypit, setTyypit] = useState(props.tyypit);\n  const [paikatMaakunnassa, setPaikatMaakunnassa] = useState(props.paikatMaakunnassa);\n  const [tyyppimaarat, setTyyppimaarat] = useState({\n    laavut: 0,\n    kodat: 0,\n    paivatuvat: 0,\n    nuotiopaikat: 0,\n    luolat: 0,\n    auotiotuvat: 0,\n    ruokailukatokset: 0,\n    nahtavyydet: 0,\n    lintutornit: 0,\n    varaustuvat: 0,\n    kammit: 0,\n    porokampat: 0,\n    lahteet: 0\n  });\n  useEffect(() => {\n    setTyypit(props.tyypit);\n  }, [props.tyypit]);\n  useEffect(() => {\n    setPaikatMaakunnassa(props.paikatMaakunnassa);\n    laskeMaarat();\n  }, [props.paikatMaakunnassa]);\n\n  const laskeMaarat = () => {\n    let laavut = 0;\n    let kodat = 0;\n    let paivatuvat = 0;\n    let nuotiopaikat = 0;\n    let luolat = 0;\n    let auotiotuvat = 0;\n    let ruokailukatokset = 0;\n    let nahtavyydet = 0;\n    let lintutornit = 0;\n    let varaustuvat = 0;\n    let kammit = 0;\n    let porokampat = 0;\n    let lahteet = 0;\n    console.log(\"mites tää paikat maakunnassa:\", paikatMaakunnassa);\n\n    for (let paikka of paikatMaakunnassa) {\n      switch (paikka.tyyppi) {\n        case \"Laavu\":\n          laavut++;\n          break;\n\n        case \"Kota\":\n          kodat++;\n          break;\n\n        case \"Päivätupa\":\n          paivatuvat++;\n          break;\n\n        case \"Nuotiopaikka\":\n          nuotiopaikat++;\n          break;\n\n        case \"Luola\":\n          luolat++;\n          break;\n\n        case \"Autiotupa\":\n          auotiotuvat++;\n          break;\n\n        case \"Ruokailukatos\":\n          ruokailukatokset++;\n          break;\n\n        case \"Nähtävyys\":\n          nahtavyydet++;\n          break;\n\n        case \"Lintutorni\":\n          lintutornit++;\n          break;\n\n        case \"Varaustupa\":\n          varaustuvat++;\n          break;\n\n        case \"Kammi\":\n          kammit++;\n          break;\n\n        case \"Porokämppä\":\n          porokampat++;\n          break;\n\n        case \"Lähde\":\n          lahteet++;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    setTyyppimaarat({\n      laavut: laavut,\n      kodat: kodat,\n      paivatuvat: paivatuvat,\n      nuotiopaikat: nuotiopaikat,\n      luolat: luolat,\n      auotiotuvat: auotiotuvat,\n      ruokailukatokset: ruokailukatokset,\n      nahtavyydet: nahtavyydet,\n      lintutornit: lintutornit,\n      varaustuvat: varaustuvat,\n      kammit: kammit,\n      porokampat: porokampat,\n      lahteet: lahteet\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"barchart-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: [...tyypit],\n        datasets: [{\n          label: \"test\",\n          data: [1, 2, 3, 4],\n          backgroundColor: \"blue\"\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BarChart, \"Ddw5kNaPkpqMd+JhKeWHiHZBTmg=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["C:/Users/sauli/OneDrive/Työpöytä/JAMK/retkisofta/retkiohjelma/src/BarChart.js"],"names":["_adapters","React","useState","useEffect","Bar","BarChart","props","tyypit","setTyypit","paikatMaakunnassa","setPaikatMaakunnassa","tyyppimaarat","setTyyppimaarat","laavut","kodat","paivatuvat","nuotiopaikat","luolat","auotiotuvat","ruokailukatokset","nahtavyydet","lintutornit","varaustuvat","kammit","porokampat","lahteet","laskeMaarat","console","log","paikka","tyyppi","labels","datasets","label","data","backgroundColor"],"mappings":"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","sourcesContent":["import { _adapters } from \"chart.js\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nfunction BarChart(props) {\r\n  const [tyypit, setTyypit] = useState(props.tyypit);\r\n  const [paikatMaakunnassa, setPaikatMaakunnassa] = useState(\r\n    props.paikatMaakunnassa\r\n  );\r\n  const [tyyppimaarat, setTyyppimaarat] = useState({\r\n    laavut: 0,\r\n    kodat: 0,\r\n    paivatuvat: 0,\r\n    nuotiopaikat: 0,\r\n    luolat: 0,\r\n    auotiotuvat: 0,\r\n    ruokailukatokset: 0,\r\n    nahtavyydet: 0,\r\n    lintutornit: 0,\r\n    varaustuvat: 0,\r\n    kammit: 0,\r\n    porokampat: 0,\r\n    lahteet: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTyypit(props.tyypit);\r\n  }, [props.tyypit]);\r\n\r\n  useEffect(() => {\r\n    setPaikatMaakunnassa(props.paikatMaakunnassa);\r\n    laskeMaarat();\r\n  }, [props.paikatMaakunnassa]);\r\n\r\n  const laskeMaarat = () => {\r\n    let laavut = 0;\r\n    let kodat = 0;\r\n    let paivatuvat = 0;\r\n    let nuotiopaikat = 0;\r\n    let luolat = 0;\r\n    let auotiotuvat = 0;\r\n    let ruokailukatokset = 0;\r\n    let nahtavyydet = 0;\r\n    let lintutornit = 0;\r\n    let varaustuvat = 0;\r\n    let kammit = 0;\r\n    let porokampat = 0;\r\n    let lahteet = 0;\r\n\r\n    console.log(\"mites tää paikat maakunnassa:\", paikatMaakunnassa);\r\n\r\n    for (let paikka of paikatMaakunnassa) {\r\n      switch (paikka.tyyppi) {\r\n        case \"Laavu\":\r\n          laavut++;\r\n          break;\r\n        case \"Kota\":\r\n          kodat++;\r\n          break;\r\n        case \"Päivätupa\":\r\n          paivatuvat++;\r\n          break;\r\n        case \"Nuotiopaikka\":\r\n          nuotiopaikat++;\r\n          break;\r\n        case \"Luola\":\r\n          luolat++;\r\n          break;\r\n        case \"Autiotupa\":\r\n          auotiotuvat++;\r\n          break;\r\n        case \"Ruokailukatos\":\r\n          ruokailukatokset++;\r\n          break;\r\n        case \"Nähtävyys\":\r\n          nahtavyydet++;\r\n          break;\r\n        case \"Lintutorni\":\r\n          lintutornit++;\r\n          break;\r\n        case \"Varaustupa\":\r\n          varaustuvat++;\r\n          break;\r\n        case \"Kammi\":\r\n          kammit++;\r\n          break;\r\n        case \"Porokämppä\":\r\n          porokampat++;\r\n          break;\r\n        case \"Lähde\":\r\n          lahteet++;\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    setTyyppimaarat({\r\n      laavut: laavut,\r\n      kodat: kodat,\r\n      paivatuvat: paivatuvat,\r\n      nuotiopaikat: nuotiopaikat,\r\n      luolat: luolat,\r\n      auotiotuvat: auotiotuvat,\r\n      ruokailukatokset: ruokailukatokset,\r\n      nahtavyydet: nahtavyydet,\r\n      lintutornit: lintutornit,\r\n      varaustuvat: varaustuvat,\r\n      kammit: kammit,\r\n      porokampat: porokampat,\r\n      lahteet: lahteet,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"barchart-wrapper\">\r\n      <Bar\r\n        data={{\r\n          labels: [...tyypit],\r\n          datasets: [\r\n            {\r\n              label: \"test\",\r\n              data: [1, 2, 3, 4],\r\n              backgroundColor: \"blue\",\r\n            },\r\n          ],\r\n        }}\r\n      ></Bar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n"]},"metadata":{},"sourceType":"module"}