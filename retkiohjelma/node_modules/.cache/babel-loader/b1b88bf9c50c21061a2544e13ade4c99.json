{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauli\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\JAMK\\\\retkisofta\\\\retkiohjelma\\\\src\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactMapGl, { Marker, Popup, TRANSITION_EVENTS } from \"react-map-gl\";\nimport { useTransition, animated, config } from \"react-spring\";\nimport icon from \"./red_pin.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst access_token = \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\n\nfunction Map(props) {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    latitude: 62,\n    longitude: 25,\n    zoom: 5,\n    transitionDuration: 500\n  });\n  const [paikat, setPaikat] = useState(props.rajatutPaikat);\n  const [kaikkiPaikat, setKaikkiPaikat] = useState(props.kaikkiPaikat);\n  const [valittuMarker, setValittuMarker] = useState();\n  const prevLat = useRef(props.newLat);\n  const prevLong = useRef(props.newLong);\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState(); // Tämä on uutta testikoodia\n\n  const [numerot, setNumerot] = useState([{\n    nimi: \"testinimi\"\n  }, {\n    nimi: \"toinen testinimi\"\n  }]);\n  const transition = useTransition(paikat[0], {\n    from: {\n      opacity: 0,\n      marginTop: -1000\n    },\n    enter: {\n      opacity: 1,\n      marginTop: 0\n    },\n    delay: 500\n  });\n  useEffect(() => {\n    setPaikat(props.rajatutPaikat); //console.log(\"paikat:\", paikat);\n\n    setValittuMarker(null);\n  }, [props.rajatutPaikat]);\n  /*  useEffect(() => {\r\n    console.log(\"RENDERÖIDÄÄN KAIKKI PAIKAT\");\r\n    setPaikat(props.kaikkiPaikat);\r\n  }, [props.kaikkiPaikat]); */\n\n  useEffect(() => {\n    if (props.newLat || props.newLong) {\n      setValittuMarker(null);\n      setViewport({\n        latitude: parseFloat(props.newLat),\n        longitude: parseFloat(props.newLong),\n        zoom: 5,\n        transitionDuration: 500\n      });\n    }\n  }, [props.newLat, props.newLong]);\n\n  const naytaPopUp = paikka => {\n    console.log(\"valittu:\", paikka);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: paikka.nimi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tyyppi: \", paikka.tyyppi]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Maakunta: \", paikka.maakunta]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Koordinaatit: \", paikka.koordinaatti]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ReactMapGl, {\n    className: \"map\",\n    ...viewport,\n    mapboxApiAccessToken: access_token,\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    height: 800,\n    width: 800,\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    children: [paikat.length > 0 && transition.length > 0 && transition((styles, paikka) => {\n      let koord = paikka.koordinaatti.split(\",\");\n      return setTimeout(500, () => {\n        /*#__PURE__*/\n        _jsxDEV(animated.div, {\n          style: styles,\n          children: /*#__PURE__*/_jsxDEV(Marker, {\n            className: \"markers\",\n            latitude: parseFloat(koord[0]),\n            longitude: parseFloat(koord[1]),\n            offsetLeft: -25 / 2,\n            offsetTop: -25 / 2,\n            onClick: () => {\n              setValittuMarker(paikka);\n              let koordinaatit = paikka.koordinaatti.split(\",\");\n              setLat(parseFloat(koordinaatit[0]));\n              setLong(parseFloat(koordinaatit[1]));\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"marker-images\",\n              src: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)\n        }, paikka.nimi, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this);\n      });\n    })\n    /* paikat[0].map((paikka, index) => {\r\n      let koord = paikka.koordinaatti.split(\",\");\r\n      return (\r\n        <Marker\r\n          key={index}\r\n          className=\"markers\"\r\n          latitude={parseFloat(koord[0])}\r\n          longitude={parseFloat(koord[1])}\r\n          offsetLeft={-25 / 2}\r\n          offsetTop={-25 / 2}\r\n          onClick={() => {\r\n            setValittuMarker(paikka);\r\n            let koordinaatit = paikka.koordinaatti.split(\",\");\r\n            setLat(parseFloat(koordinaatit[0]));\r\n            setLong(parseFloat(koordinaatit[1]));\r\n          }}\r\n        >\r\n          <img className=\"marker-images\" src={icon}></img>\r\n        </Marker>\r\n      );\r\n    }) */\n    , valittuMarker && lat && long && /*#__PURE__*/_jsxDEV(Popup, {\n      latitude: lat,\n      longitude: long,\n      anchor: \"bottom\",\n      offsetTop: -25 / 2,\n      onClose: () => setValittuMarker(null),\n      children: naytaPopUp(valittuMarker)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"yoEHeZYPFhvC9w8ZXNieFhFznvo=\", false, function () {\n  return [useTransition];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/sauli/OneDrive/Työpöytä/JAMK/retkisofta/retkiohjelma/src/Map.js"],"names":["React","useState","useEffect","useRef","ReactMapGl","Marker","Popup","TRANSITION_EVENTS","useTransition","animated","config","icon","access_token","Map","props","viewport","setViewport","latitude","longitude","zoom","transitionDuration","paikat","setPaikat","rajatutPaikat","kaikkiPaikat","setKaikkiPaikat","valittuMarker","setValittuMarker","prevLat","newLat","prevLong","newLong","lat","setLat","long","setLong","numerot","setNumerot","nimi","transition","from","opacity","marginTop","enter","delay","parseFloat","naytaPopUp","paikka","console","log","tyyppi","maakunta","koordinaatti","length","styles","koord","split","setTimeout","koordinaatit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactMapGl, { Marker, Popup, TRANSITION_EVENTS } from \"react-map-gl\";\r\nimport { useTransition, animated, config } from \"react-spring\";\r\nimport icon from \"./red_pin.png\";\r\n\r\nconst access_token =\r\n  \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\r\n\r\nfunction Map(props) {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 62,\r\n    longitude: 25,\r\n    zoom: 5,\r\n    transitionDuration: 500,\r\n  });\r\n\r\n  const [paikat, setPaikat] = useState(props.rajatutPaikat);\r\n  const [kaikkiPaikat, setKaikkiPaikat] = useState(props.kaikkiPaikat);\r\n  const [valittuMarker, setValittuMarker] = useState();\r\n  const prevLat = useRef(props.newLat);\r\n  const prevLong = useRef(props.newLong);\r\n  const [lat, setLat] = useState();\r\n  const [long, setLong] = useState();\r\n  // Tämä on uutta testikoodia\r\n  const [numerot, setNumerot] = useState([\r\n    { nimi: \"testinimi\" },\r\n    { nimi: \"toinen testinimi\" },\r\n  ]);\r\n  const transition = useTransition(paikat[0], {\r\n    from: { opacity: 0, marginTop: -1000 },\r\n    enter: { opacity: 1, marginTop: 0 },\r\n\r\n    delay: 500,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPaikat(props.rajatutPaikat);\r\n    //console.log(\"paikat:\", paikat);\r\n    setValittuMarker(null);\r\n  }, [props.rajatutPaikat]);\r\n\r\n  /*  useEffect(() => {\r\n    console.log(\"RENDERÖIDÄÄN KAIKKI PAIKAT\");\r\n    setPaikat(props.kaikkiPaikat);\r\n  }, [props.kaikkiPaikat]); */\r\n\r\n  useEffect(() => {\r\n    if (props.newLat || props.newLong) {\r\n      setValittuMarker(null);\r\n      setViewport({\r\n        latitude: parseFloat(props.newLat),\r\n        longitude: parseFloat(props.newLong),\r\n        zoom: 5,\r\n        transitionDuration: 500,\r\n      });\r\n    }\r\n  }, [props.newLat, props.newLong]);\r\n\r\n  const naytaPopUp = (paikka) => {\r\n    console.log(\"valittu:\", paikka);\r\n    return (\r\n      <div className=\"popup\">\r\n        <h3>{paikka.nimi}</h3>\r\n        <p>Tyyppi: {paikka.tyyppi}</p>\r\n        <p>Maakunta: {paikka.maakunta}</p>\r\n        <p>Koordinaatit: {paikka.koordinaatti}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ReactMapGl\r\n      className=\"map\"\r\n      {...viewport}\r\n      mapboxApiAccessToken={access_token}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n      height={800}\r\n      width={800}\r\n      onViewportChange={(viewport) => {\r\n        setViewport(viewport);\r\n      }}\r\n    >\r\n      {\r\n        paikat.length > 0 &&\r\n          transition.length > 0 &&\r\n          transition((styles, paikka) => {\r\n            let koord = paikka.koordinaatti.split(\",\");\r\n            return setTimeout(500, () => {\r\n              <animated.div key={paikka.nimi} style={styles}>\r\n                <Marker\r\n                  className=\"markers\"\r\n                  latitude={parseFloat(koord[0])}\r\n                  longitude={parseFloat(koord[1])}\r\n                  offsetLeft={-25 / 2}\r\n                  offsetTop={-25 / 2}\r\n                  onClick={() => {\r\n                    setValittuMarker(paikka);\r\n                    let koordinaatit = paikka.koordinaatti.split(\",\");\r\n                    setLat(parseFloat(koordinaatit[0]));\r\n                    setLong(parseFloat(koordinaatit[1]));\r\n                  }}\r\n                >\r\n                  <img className=\"marker-images\" src={icon}></img>\r\n                </Marker>\r\n              </animated.div>;\r\n            });\r\n          })\r\n\r\n        /* paikat[0].map((paikka, index) => {\r\n          let koord = paikka.koordinaatti.split(\",\");\r\n          return (\r\n            <Marker\r\n              key={index}\r\n              className=\"markers\"\r\n              latitude={parseFloat(koord[0])}\r\n              longitude={parseFloat(koord[1])}\r\n              offsetLeft={-25 / 2}\r\n              offsetTop={-25 / 2}\r\n              onClick={() => {\r\n                setValittuMarker(paikka);\r\n                let koordinaatit = paikka.koordinaatti.split(\",\");\r\n                setLat(parseFloat(koordinaatit[0]));\r\n                setLong(parseFloat(koordinaatit[1]));\r\n              }}\r\n            >\r\n              <img className=\"marker-images\" src={icon}></img>\r\n            </Marker>\r\n          );\r\n        }) */\r\n      }\r\n\r\n      {valittuMarker && lat && long && (\r\n        <Popup\r\n          latitude={lat}\r\n          longitude={long}\r\n          anchor=\"bottom\"\r\n          offsetTop={-25 / 2}\r\n          onClose={() => setValittuMarker(null)}\r\n        >\r\n          {naytaPopUp(valittuMarker)}\r\n        </Popup>\r\n      )}\r\n    </ReactMapGl>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}