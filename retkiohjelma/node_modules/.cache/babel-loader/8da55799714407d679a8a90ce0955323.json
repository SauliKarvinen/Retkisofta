{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauli\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\JAMK\\\\retkisofta\\\\retkiohjelma\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport Map from \"./Map\";\nimport BarChart from \"./BarChart\";\nimport PieChart from \"./PieChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://tulikartta.fi/api-json2.php\";\nlet dropmenuMaakunnatIsVisible = false;\nlet dropmenuTyypitIsVisible = false;\n\nfunction App() {\n  _s();\n\n  const [paikat, setPaikat] = useState([]);\n  const [maakunnat, setMaakunnat] = useState([]);\n  const [tyypit, setTyypit] = useState([]);\n  const [valittuMaakunta, setValittuMaakunta] = useState(\"\");\n  const [valittuTyyppi, setValittuTyyppi] = useState(\"\");\n  const [rajatutPaikat, setRajatutPaikat] = useState([]);\n  const [paikatMaakunnassa, setPaikatMaakunnassa] = useState([]);\n  const [newLat, setNewLat] = useState();\n  const [newLong, setNewLong] = useState();\n  const [naytaMaakuntaValikko, setNaytaMaakuntaValikko] = useState(false);\n  const [toggleMaakunnatClick, setToggleMaakunnatClick] = useState(false);\n  const [toggleTyypitClick, setToggleTyypitClick] = useState(false);\n  const [chartData, setChartData] = useState([]);\n  const [maakuntaValittu, setMaakuntaValittu] = useState(false);\n  const [tyyppiValittu, setTyyppiValittu] = useState(false);\n  const maakunnatFade = useSpring({\n    position: \"absolute\",\n    border: toggleMaakunnatClick ? 1 : 0,\n    height: toggleMaakunnatClick ? 100 : 0,\n    width: 200\n  });\n  const tyypitFade = useSpring({\n    position: \"absolute\",\n    border: toggleTyypitClick ? 1 : 0,\n    height: toggleTyypitClick ? 100 : 0,\n    width: 200\n  });\n  useEffect(() => {\n    fetch(API_URL, {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }).then(response => {\n      console.log(response);\n      return response.json();\n    }).then(jsonData => {\n      const paikatArr = [...jsonData];\n      const maakunnatArr = [];\n      const tyypitArr = [];\n      tyypitArr.push(\"Näytä kaikki\");\n\n      for (let i of paikatArr) {\n        maakunnatArr.push(i.maakunta);\n        tyypitArr.push(i.tyyppi);\n      }\n\n      const maakunnatRemoveDuplicates = [...new Set(maakunnatArr)];\n      const tyypitRemoveDublicates = [...new Set(tyypitArr)];\n      setPaikat([...jsonData]);\n      setMaakunnat([...maakunnatRemoveDuplicates]);\n      setTyypit([...tyypitRemoveDublicates]); //paivitaPaikatMaakunnassa();\n    });\n  }, []);\n  useEffect(() => {\n    paivitaPaikatMaakunnassa();\n    paivitaChartData(); //paivitaPaikat();\n\n    return () => {};\n  }, [valittuMaakunta]);\n  useEffect(() => {\n    paivitaPaikat();\n  }, [valittuTyyppi]);\n\n  const paivitaChartData = () => {\n    const chartDataArr = paikat.filter(paikka => paikka.maakunta == valittuMaakunta);\n    setChartData([chartDataArr]);\n  };\n\n  const paivitaPaikatMaakunnassa = () => {\n    /* const paikatMaakunnassaArr = paikat.filter(\n      (paikka) => paikka.maakunta == valittuMaakunta\n    ); */\n    let paikatMaakunnassaArr = [];\n\n    if (valittuTyyppi == \"Näytä kaikki\" || valittuTyyppi == \"\") {\n      paikatMaakunnassaArr = paikat.filter(paikka => paikka.maakunta == valittuMaakunta);\n      setChartData([paikatMaakunnassaArr]);\n    } else {\n      paikatMaakunnassaArr = paikat.filter(paikka => paikka.maakunta == valittuMaakunta && paikka.tyyppi == valittuTyyppi);\n    }\n\n    setPaikatMaakunnassa([paikatMaakunnassaArr]);\n    setRajatutPaikat([paikatMaakunnassaArr]);\n\n    if (valittuMaakunta != \"\" && paikatMaakunnassaArr[0]) {\n      const splitKoordinaatit = paikatMaakunnassaArr[0].koordinaatti.split(\",\");\n      setNewLat(splitKoordinaatit[0]);\n      setNewLong(splitKoordinaatit[1]);\n    }\n  };\n\n  const naytaMaakunnat = () => {\n    let valikko = document.getElementById(\"maakunnatContainer\");\n    dropmenuMaakunnatIsVisible = !dropmenuMaakunnatIsVisible;\n\n    if (dropmenuMaakunnatIsVisible) {\n      valikko.style.display = \"block\";\n    } else {\n      valikko.style.display = \"none\";\n    }\n  };\n\n  const naytaTyypit = () => {\n    let valikko = document.getElementById(\"tyypitContainer\");\n    dropmenuTyypitIsVisible = !dropmenuTyypitIsVisible;\n\n    if (dropmenuTyypitIsVisible) {\n      valikko.style.display = \"block\";\n    } else {\n      valikko.style.display = \"none\";\n    }\n  };\n\n  const paivitaPaikat = () => {\n    if (valittuMaakunta != \"\" && valittuTyyppi != \"Näytä kaikki\") {\n      let rajatutPaikat = [];\n\n      async function f() {\n        {\n          rajatutPaikat = paikat.filter(paikka => paikka.maakunta == valittuMaakunta && paikka.tyyppi == valittuTyyppi);\n        }\n      }\n\n      f().then(() => setRajatutPaikat([rajatutPaikat]));\n    } else if (valittuTyyppi == \"Näytä kaikki\") {\n      //setRajatutPaikat([...paikatMaakunnassa]);\n      paivitaPaikatMaakunnassa();\n    }\n  };\n\n  const luoMaakuntaValikko = () => {\n    let selectBox = document.getElementById(\"inputMaakunnat\");\n    const options = Object.values(maakunnat).map((maakunta, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"valinnat\",\n      onClick: e => {\n        selectBox.value = e.target.innerHTML;\n        setValittuMaakunta(e.target.innerHTML);\n        selectBox.focus();\n        setToggleMaakunnatClick(false); //Nämä seuraavat kaksi riviä on testiä\n\n        setMaakuntaValittu(false);\n        setMaakuntaValittu(true); // OTA TÄSTÄ KOMMENTIT POIS\n        //document.getElementById(\"maakunnatContainer\").style.display = \"none\";\n\n        dropmenuMaakunnatIsVisible = false;\n      },\n      children: maakunta\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(animated.div, {\n      style: maakunnatFade,\n      id: \"maakunnatContainer\",\n      className: \"options\"\n      /* style={{ display: \"none\" }} */\n      ,\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  };\n\n  const luoTyypitValikko = () => {\n    let selectBox = document.getElementById(\"inputTyypit\");\n    const options = Object.values(tyypit).map((tyyppi, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"valinnat\",\n      onClick: e => {\n        selectBox.value = e.target.innerHTML;\n        setValittuTyyppi(e.target.innerHTML);\n        selectBox.focus();\n        setToggleTyypitClick(false); //Nämä seuraavat kaksi riviä on testiä\n\n        setTyyppiValittu(false);\n        setTyyppiValittu(true); //document.getElementById(\"tyypitContainer\").style.display = \"none\";\n\n        dropmenuTyypitIsVisible = false;\n      },\n      children: tyyppi\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(animated.div, {\n      style: tyypitFade,\n      id: \"tyypitContainer\",\n      className: \"options\"\n      /* style={{ display: \"none\" }} */\n      ,\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"inputMaakunnat\",\n        type: \"text\",\n        value: valittuMaakunta,\n        onClick: () =>\n        /* naytaMaakunnat() */\n        {\n          /* setNaytaMaakuntaValikko(true); */\n          setToggleMaakunnatClick(!toggleMaakunnatClick);\n        },\n        placeholder: \"Valitse maakunta\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), luoMaakuntaValikko(), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"inputTyypit\",\n        inputMode: \"text\",\n        value: valittuTyyppi,\n        onClick: () => {\n          /* naytaTyypit(); */\n          setToggleTyypitClick(!toggleTyypitClick);\n        },\n        placeholder: \"Valitse tyyppi\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), luoTyypitValikko()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), maakunnat.length > 0 && tyypit.length > 0 && paikat && rajatutPaikat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-chart-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Map, {\n        className: \"map\",\n        maakunta: valittuMaakunta,\n        tyyppi: valittuTyyppi,\n        kaikkiPaikat: [...paikatMaakunnassa],\n        rajatutPaikat: [...rajatutPaikat],\n        newLat: newLat,\n        newLong: newLong,\n        maakuntaValittu: maakuntaValittu,\n        tyyppiValittu: tyyppiValittu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(BarChart, {\n          tyypit: [...tyypit],\n          paikatMaakunnassa: chartData,\n          rajatutPaikat: rajatutPaikat,\n          maakunta: valittuMaakunta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          paikat: [...tyypit],\n          paikatMaakunnassa: chartData,\n          maakunta: valittuMaakunta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DDaDM5ooetI21nMqxeOlPUVjWy0=\", false, function () {\n  return [useSpring, useSpring];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/sauli/OneDrive/Työpöytä/JAMK/retkisofta/retkiohjelma/src/App.js"],"names":["React","useState","useEffect","useSpring","animated","Map","BarChart","PieChart","API_URL","dropmenuMaakunnatIsVisible","dropmenuTyypitIsVisible","App","paikat","setPaikat","maakunnat","setMaakunnat","tyypit","setTyypit","valittuMaakunta","setValittuMaakunta","valittuTyyppi","setValittuTyyppi","rajatutPaikat","setRajatutPaikat","paikatMaakunnassa","setPaikatMaakunnassa","newLat","setNewLat","newLong","setNewLong","naytaMaakuntaValikko","setNaytaMaakuntaValikko","toggleMaakunnatClick","setToggleMaakunnatClick","toggleTyypitClick","setToggleTyypitClick","chartData","setChartData","maakuntaValittu","setMaakuntaValittu","tyyppiValittu","setTyyppiValittu","maakunnatFade","position","border","height","width","tyypitFade","fetch","Accept","then","response","console","log","json","jsonData","paikatArr","maakunnatArr","tyypitArr","push","i","maakunta","tyyppi","maakunnatRemoveDuplicates","Set","tyypitRemoveDublicates","paivitaPaikatMaakunnassa","paivitaChartData","paivitaPaikat","chartDataArr","filter","paikka","paikatMaakunnassaArr","splitKoordinaatit","koordinaatti","split","naytaMaakunnat","valikko","document","getElementById","style","display","naytaTyypit","f","luoMaakuntaValikko","selectBox","options","Object","values","map","index","e","value","target","innerHTML","focus","luoTyypitValikko","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,OAAO,GAAG,qCAAhB;AACA,IAAIC,0BAA0B,GAAG,KAAjC;AACA,IAAIC,uBAAuB,GAAG,KAA9B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACuB,iBAAD,EAAoBC,oBAApB,IAA4CxB,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,EAApC;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,EAAtC;AACA,QAAM,CAAC6B,oBAAD,EAAuBC,uBAAvB,IAAkD9B,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAAC+B,oBAAD,EAAuBC,uBAAvB,IAAkDhC,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAACiC,iBAAD,EAAoBC,oBAApB,IAA4ClC,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACmC,SAAD,EAAYC,YAAZ,IAA4BpC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqC,eAAD,EAAkBC,kBAAlB,IAAwCtC,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACuC,aAAD,EAAgBC,gBAAhB,IAAoCxC,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMyC,aAAa,GAAGvC,SAAS,CAAC;AAC9BwC,IAAAA,QAAQ,EAAE,UADoB;AAE9BC,IAAAA,MAAM,EAAEZ,oBAAoB,GAAG,CAAH,GAAO,CAFL;AAG9Ba,IAAAA,MAAM,EAAEb,oBAAoB,GAAG,GAAH,GAAS,CAHP;AAI9Bc,IAAAA,KAAK,EAAE;AAJuB,GAAD,CAA/B;AAOA,QAAMC,UAAU,GAAG5C,SAAS,CAAC;AAC3BwC,IAAAA,QAAQ,EAAE,UADiB;AAE3BC,IAAAA,MAAM,EAAEV,iBAAiB,GAAG,CAAH,GAAO,CAFL;AAG3BW,IAAAA,MAAM,EAAEX,iBAAiB,GAAG,GAAH,GAAS,CAHP;AAI3BY,IAAAA,KAAK,EAAE;AAJoB,GAAD,CAA5B;AAOA5C,EAAAA,SAAS,CAAC,MAAM;AACd8C,IAAAA,KAAK,CAACxC,OAAD,EAAU;AACb,sBAAgB,kBADH;AAEbyC,MAAAA,MAAM,EAAE;AAFK,KAAV,CAAL,CAIGC,IAJH,CAISC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,KAPH,EAQGJ,IARH,CAQSK,QAAD,IAAc;AAClB,YAAMC,SAAS,GAAG,CAAC,GAAGD,QAAJ,CAAlB;AACA,YAAME,YAAY,GAAG,EAArB;AACA,YAAMC,SAAS,GAAG,EAAlB;AAEAA,MAAAA,SAAS,CAACC,IAAV,CAAe,cAAf;;AAEA,WAAK,IAAIC,CAAT,IAAcJ,SAAd,EAAyB;AACvBC,QAAAA,YAAY,CAACE,IAAb,CAAkBC,CAAC,CAACC,QAApB;AACAH,QAAAA,SAAS,CAACC,IAAV,CAAeC,CAAC,CAACE,MAAjB;AACD;;AACD,YAAMC,yBAAyB,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQP,YAAR,CAAJ,CAAlC;AACA,YAAMQ,sBAAsB,GAAG,CAAC,GAAG,IAAID,GAAJ,CAAQN,SAAR,CAAJ,CAA/B;AAEA7C,MAAAA,SAAS,CAAC,CAAC,GAAG0C,QAAJ,CAAD,CAAT;AACAxC,MAAAA,YAAY,CAAC,CAAC,GAAGgD,yBAAJ,CAAD,CAAZ;AACA9C,MAAAA,SAAS,CAAC,CAAC,GAAGgD,sBAAJ,CAAD,CAAT,CAhBkB,CAiBlB;AACD,KA1BH;AA2BD,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA/D,EAAAA,SAAS,CAAC,MAAM;AACdgE,IAAAA,wBAAwB;AACxBC,IAAAA,gBAAgB,GAFF,CAGd;;AACA,WAAO,MAAM,CAAE,CAAf;AACD,GALQ,EAKN,CAACjD,eAAD,CALM,CAAT;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACdkE,IAAAA,aAAa;AACd,GAFQ,EAEN,CAAChD,aAAD,CAFM,CAAT;;AAIA,QAAM+C,gBAAgB,GAAG,MAAM;AAC7B,UAAME,YAAY,GAAGzD,MAAM,CAAC0D,MAAP,CAClBC,MAAD,IAAYA,MAAM,CAACV,QAAP,IAAmB3C,eADZ,CAArB;AAIAmB,IAAAA,YAAY,CAAC,CAACgC,YAAD,CAAD,CAAZ;AACD,GAND;;AAQA,QAAMH,wBAAwB,GAAG,MAAM;AACrC;AACJ;AACA;AACI,QAAIM,oBAAoB,GAAG,EAA3B;;AAEA,QAAIpD,aAAa,IAAI,cAAjB,IAAmCA,aAAa,IAAI,EAAxD,EAA4D;AAC1DoD,MAAAA,oBAAoB,GAAG5D,MAAM,CAAC0D,MAAP,CACpBC,MAAD,IAAYA,MAAM,CAACV,QAAP,IAAmB3C,eADV,CAAvB;AAGAmB,MAAAA,YAAY,CAAC,CAACmC,oBAAD,CAAD,CAAZ;AACD,KALD,MAKO;AACLA,MAAAA,oBAAoB,GAAG5D,MAAM,CAAC0D,MAAP,CACpBC,MAAD,IACEA,MAAM,CAACV,QAAP,IAAmB3C,eAAnB,IAAsCqD,MAAM,CAACT,MAAP,IAAiB1C,aAFpC,CAAvB;AAID;;AACDK,IAAAA,oBAAoB,CAAC,CAAC+C,oBAAD,CAAD,CAApB;AACAjD,IAAAA,gBAAgB,CAAC,CAACiD,oBAAD,CAAD,CAAhB;;AAEA,QAAItD,eAAe,IAAI,EAAnB,IAAyBsD,oBAAoB,CAAC,CAAD,CAAjD,EAAsD;AACpD,YAAMC,iBAAiB,GAAGD,oBAAoB,CAAC,CAAD,CAApB,CAAwBE,YAAxB,CAAqCC,KAArC,CAA2C,GAA3C,CAA1B;AACAhD,MAAAA,SAAS,CAAC8C,iBAAiB,CAAC,CAAD,CAAlB,CAAT;AACA5C,MAAAA,UAAU,CAAC4C,iBAAiB,CAAC,CAAD,CAAlB,CAAV;AACD;AACF,GAzBD;;AA2BA,QAAMG,cAAc,GAAG,MAAM;AAC3B,QAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAd;AAEAtE,IAAAA,0BAA0B,GAAG,CAACA,0BAA9B;;AACA,QAAIA,0BAAJ,EAAgC;AAC9BoE,MAAAA,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,OAAxB;AACD,KAFD,MAEO;AACLJ,MAAAA,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACD;AACF,GATD;;AAWA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIL,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAd;AAEArE,IAAAA,uBAAuB,GAAG,CAACA,uBAA3B;;AACA,QAAIA,uBAAJ,EAA6B;AAC3BmE,MAAAA,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,OAAxB;AACD,KAFD,MAEO;AACLJ,MAAAA,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACD;AACF,GATD;;AAWA,QAAMb,aAAa,GAAG,MAAM;AAC1B,QAAIlD,eAAe,IAAI,EAAnB,IAAyBE,aAAa,IAAI,cAA9C,EAA8D;AAC5D,UAAIE,aAAa,GAAG,EAApB;;AACA,qBAAe6D,CAAf,GAAmB;AACjB;AACE7D,UAAAA,aAAa,GAAGV,MAAM,CAAC0D,MAAP,CACbC,MAAD,IACEA,MAAM,CAACV,QAAP,IAAmB3C,eAAnB,IACAqD,MAAM,CAACT,MAAP,IAAiB1C,aAHL,CAAhB;AAKD;AACF;;AACD+D,MAAAA,CAAC,GAAGjC,IAAJ,CAAS,MAAM3B,gBAAgB,CAAC,CAACD,aAAD,CAAD,CAA/B;AACD,KAZD,MAYO,IAAIF,aAAa,IAAI,cAArB,EAAqC;AAC1C;AACA8C,MAAAA,wBAAwB;AACzB;AACF,GAjBD;;AAmBA,QAAMkB,kBAAkB,GAAG,MAAM;AAC/B,QAAIC,SAAS,GAAGP,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAhB;AACA,UAAMO,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc1E,SAAd,EAAyB2E,GAAzB,CAA6B,CAAC5B,QAAD,EAAW6B,KAAX,kBAC3C;AAEE,MAAA,SAAS,EAAC,UAFZ;AAGE,MAAA,OAAO,EAAGC,CAAD,IAAO;AACdN,QAAAA,SAAS,CAACO,KAAV,GAAkBD,CAAC,CAACE,MAAF,CAASC,SAA3B;AACA3E,QAAAA,kBAAkB,CAACwE,CAAC,CAACE,MAAF,CAASC,SAAV,CAAlB;AACAT,QAAAA,SAAS,CAACU,KAAV;AACA9D,QAAAA,uBAAuB,CAAC,KAAD,CAAvB,CAJc,CAKd;;AACAM,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAA,QAAAA,kBAAkB,CAAC,IAAD,CAAlB,CAPc,CAQd;AACA;;AACA9B,QAAAA,0BAA0B,GAAG,KAA7B;AACD,OAdH;AAAA,gBAgBGoD;AAhBH,OACO6B,KADP;AAAA;AAAA;AAAA;AAAA,YADc,CAAhB;AAqBA,wBACE,QAAC,QAAD,CAAU,GAAV;AACE,MAAA,KAAK,EAAEhD,aADT;AAEE,MAAA,EAAE,EAAE,oBAFN;AAGE,MAAA,SAAS,EAAC;AACV;AAJF;AAAA,gBAMG4C;AANH;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAjCD;;AAmCA,QAAMU,gBAAgB,GAAG,MAAM;AAC7B,QAAIX,SAAS,GAAGP,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAhB;AACA,UAAMO,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcxE,MAAd,EAAsByE,GAAtB,CAA0B,CAAC3B,MAAD,EAAS4B,KAAT,kBACxC;AAEE,MAAA,SAAS,EAAC,UAFZ;AAGE,MAAA,OAAO,EAAGC,CAAD,IAAO;AACdN,QAAAA,SAAS,CAACO,KAAV,GAAkBD,CAAC,CAACE,MAAF,CAASC,SAA3B;AACAzE,QAAAA,gBAAgB,CAACsE,CAAC,CAACE,MAAF,CAASC,SAAV,CAAhB;AACAT,QAAAA,SAAS,CAACU,KAAV;AACA5D,QAAAA,oBAAoB,CAAC,KAAD,CAApB,CAJc,CAKd;;AACAM,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAA,QAAAA,gBAAgB,CAAC,IAAD,CAAhB,CAPc,CAQd;;AACA/B,QAAAA,uBAAuB,GAAG,KAA1B;AACD,OAbH;AAAA,gBAeGoD;AAfH,OACO4B,KADP;AAAA;AAAA;AAAA;AAAA,YADc,CAAhB;AAoBA,wBACE,QAAC,QAAD,CAAU,GAAV;AACE,MAAA,KAAK,EAAE3C,UADT;AAEE,MAAA,EAAE,EAAE,iBAFN;AAGE,MAAA,SAAS,EAAC;AACV;AAJF;AAAA,gBAMGuC;AANH;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAhCD;;AAkCA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,EAAE,EAAE,gBADN;AAEE,QAAA,IAAI,EAAE,MAFR;AAGE,QAAA,KAAK,EAAEpE,eAHT;AAIE,QAAA,OAAO,EAAE;AAAM;AAAuB;AACpC;AACAe,UAAAA,uBAAuB,CAAC,CAACD,oBAAF,CAAvB;AACD,SAPH;AAQE,QAAA,WAAW,EAAE,kBARf;AASE,QAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA,cADF,EAYGoD,kBAAkB,EAZrB,eAcE;AACE,QAAA,EAAE,EAAE,aADN;AAEE,QAAA,SAAS,EAAE,MAFb;AAGE,QAAA,KAAK,EAAEhE,aAHT;AAIE,QAAA,OAAO,EAAE,MAAM;AACb;AACAe,UAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,SAPH;AAQE,QAAA,WAAW,EAAE,gBARf;AASE,QAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA,cAdF,EA0BG8D,gBAAgB,EA1BnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EA6BGlF,SAAS,CAACmF,MAAV,GAAmB,CAAnB,IAAwBjF,MAAM,CAACiF,MAAP,GAAgB,CAAxC,IAA6CrF,MAA7C,IAAuDU,aAAvD,iBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE,QAAC,GAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,QAAQ,EAAEJ,eAFZ;AAGE,QAAA,MAAM,EAAEE,aAHV;AAIE,QAAA,YAAY,EAAE,CAAC,GAAGI,iBAAJ,CAJhB;AAKE,QAAA,aAAa,EAAE,CAAC,GAAGF,aAAJ,CALjB;AAME,QAAA,MAAM,EAAEI,MANV;AAOE,QAAA,OAAO,EAAEE,OAPX;AAQE,QAAA,eAAe,EAAEU,eARnB;AASE,QAAA,aAAa,EAAEE;AATjB;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE,QAAC,QAAD;AACE,UAAA,MAAM,EAAE,CAAC,GAAGxB,MAAJ,CADV;AAEE,UAAA,iBAAiB,EAAEoB,SAFrB;AAGE,UAAA,aAAa,EAAEd,aAHjB;AAIE,UAAA,QAAQ,EAAEJ;AAJZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,QAAD;AACE,UAAA,MAAM,EAAE,CAAC,GAAGF,MAAJ,CADV;AAEE,UAAA,iBAAiB,EAAEoB,SAFrB;AAGE,UAAA,QAAQ,EAAElB;AAHZ;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD;;GAtRQP,G;UAiBeR,S,EAOHA,S;;;KAxBZQ,G;AAwRT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport Map from \"./Map\";\nimport BarChart from \"./BarChart\";\nimport PieChart from \"./PieChart\";\n\nconst API_URL = \"https://tulikartta.fi/api-json2.php\";\nlet dropmenuMaakunnatIsVisible = false;\nlet dropmenuTyypitIsVisible = false;\n\nfunction App() {\n  const [paikat, setPaikat] = useState([]);\n  const [maakunnat, setMaakunnat] = useState([]);\n  const [tyypit, setTyypit] = useState([]);\n  const [valittuMaakunta, setValittuMaakunta] = useState(\"\");\n  const [valittuTyyppi, setValittuTyyppi] = useState(\"\");\n  const [rajatutPaikat, setRajatutPaikat] = useState([]);\n  const [paikatMaakunnassa, setPaikatMaakunnassa] = useState([]);\n  const [newLat, setNewLat] = useState();\n  const [newLong, setNewLong] = useState();\n  const [naytaMaakuntaValikko, setNaytaMaakuntaValikko] = useState(false);\n  const [toggleMaakunnatClick, setToggleMaakunnatClick] = useState(false);\n  const [toggleTyypitClick, setToggleTyypitClick] = useState(false);\n  const [chartData, setChartData] = useState([]);\n  const [maakuntaValittu, setMaakuntaValittu] = useState(false);\n  const [tyyppiValittu, setTyyppiValittu] = useState(false);\n\n  const maakunnatFade = useSpring({\n    position: \"absolute\",\n    border: toggleMaakunnatClick ? 1 : 0,\n    height: toggleMaakunnatClick ? 100 : 0,\n    width: 200,\n  });\n\n  const tyypitFade = useSpring({\n    position: \"absolute\",\n    border: toggleTyypitClick ? 1 : 0,\n    height: toggleTyypitClick ? 100 : 0,\n    width: 200,\n  });\n\n  useEffect(() => {\n    fetch(API_URL, {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    })\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((jsonData) => {\n        const paikatArr = [...jsonData];\n        const maakunnatArr = [];\n        const tyypitArr = [];\n\n        tyypitArr.push(\"Näytä kaikki\");\n\n        for (let i of paikatArr) {\n          maakunnatArr.push(i.maakunta);\n          tyypitArr.push(i.tyyppi);\n        }\n        const maakunnatRemoveDuplicates = [...new Set(maakunnatArr)];\n        const tyypitRemoveDublicates = [...new Set(tyypitArr)];\n\n        setPaikat([...jsonData]);\n        setMaakunnat([...maakunnatRemoveDuplicates]);\n        setTyypit([...tyypitRemoveDublicates]);\n        //paivitaPaikatMaakunnassa();\n      });\n  }, []);\n\n  useEffect(() => {\n    paivitaPaikatMaakunnassa();\n    paivitaChartData();\n    //paivitaPaikat();\n    return () => {};\n  }, [valittuMaakunta]);\n\n  useEffect(() => {\n    paivitaPaikat();\n  }, [valittuTyyppi]);\n\n  const paivitaChartData = () => {\n    const chartDataArr = paikat.filter(\n      (paikka) => paikka.maakunta == valittuMaakunta\n    );\n\n    setChartData([chartDataArr]);\n  };\n\n  const paivitaPaikatMaakunnassa = () => {\n    /* const paikatMaakunnassaArr = paikat.filter(\n      (paikka) => paikka.maakunta == valittuMaakunta\n    ); */\n    let paikatMaakunnassaArr = [];\n\n    if (valittuTyyppi == \"Näytä kaikki\" || valittuTyyppi == \"\") {\n      paikatMaakunnassaArr = paikat.filter(\n        (paikka) => paikka.maakunta == valittuMaakunta\n      );\n      setChartData([paikatMaakunnassaArr]);\n    } else {\n      paikatMaakunnassaArr = paikat.filter(\n        (paikka) =>\n          paikka.maakunta == valittuMaakunta && paikka.tyyppi == valittuTyyppi\n      );\n    }\n    setPaikatMaakunnassa([paikatMaakunnassaArr]);\n    setRajatutPaikat([paikatMaakunnassaArr]);\n\n    if (valittuMaakunta != \"\" && paikatMaakunnassaArr[0]) {\n      const splitKoordinaatit = paikatMaakunnassaArr[0].koordinaatti.split(\",\");\n      setNewLat(splitKoordinaatit[0]);\n      setNewLong(splitKoordinaatit[1]);\n    }\n  };\n\n  const naytaMaakunnat = () => {\n    let valikko = document.getElementById(\"maakunnatContainer\");\n\n    dropmenuMaakunnatIsVisible = !dropmenuMaakunnatIsVisible;\n    if (dropmenuMaakunnatIsVisible) {\n      valikko.style.display = \"block\";\n    } else {\n      valikko.style.display = \"none\";\n    }\n  };\n\n  const naytaTyypit = () => {\n    let valikko = document.getElementById(\"tyypitContainer\");\n\n    dropmenuTyypitIsVisible = !dropmenuTyypitIsVisible;\n    if (dropmenuTyypitIsVisible) {\n      valikko.style.display = \"block\";\n    } else {\n      valikko.style.display = \"none\";\n    }\n  };\n\n  const paivitaPaikat = () => {\n    if (valittuMaakunta != \"\" && valittuTyyppi != \"Näytä kaikki\") {\n      let rajatutPaikat = [];\n      async function f() {\n        {\n          rajatutPaikat = paikat.filter(\n            (paikka) =>\n              paikka.maakunta == valittuMaakunta &&\n              paikka.tyyppi == valittuTyyppi\n          );\n        }\n      }\n      f().then(() => setRajatutPaikat([rajatutPaikat]));\n    } else if (valittuTyyppi == \"Näytä kaikki\") {\n      //setRajatutPaikat([...paikatMaakunnassa]);\n      paivitaPaikatMaakunnassa();\n    }\n  };\n\n  const luoMaakuntaValikko = () => {\n    let selectBox = document.getElementById(\"inputMaakunnat\");\n    const options = Object.values(maakunnat).map((maakunta, index) => (\n      <p\n        key={index}\n        className=\"valinnat\"\n        onClick={(e) => {\n          selectBox.value = e.target.innerHTML;\n          setValittuMaakunta(e.target.innerHTML);\n          selectBox.focus();\n          setToggleMaakunnatClick(false);\n          //Nämä seuraavat kaksi riviä on testiä\n          setMaakuntaValittu(false);\n          setMaakuntaValittu(true);\n          // OTA TÄSTÄ KOMMENTIT POIS\n          //document.getElementById(\"maakunnatContainer\").style.display = \"none\";\n          dropmenuMaakunnatIsVisible = false;\n        }}\n      >\n        {maakunta}\n      </p>\n    ));\n\n    return (\n      <animated.div\n        style={maakunnatFade}\n        id={\"maakunnatContainer\"}\n        className=\"options\"\n        /* style={{ display: \"none\" }} */\n      >\n        {options}\n      </animated.div>\n    );\n  };\n\n  const luoTyypitValikko = () => {\n    let selectBox = document.getElementById(\"inputTyypit\");\n    const options = Object.values(tyypit).map((tyyppi, index) => (\n      <p\n        key={index}\n        className=\"valinnat\"\n        onClick={(e) => {\n          selectBox.value = e.target.innerHTML;\n          setValittuTyyppi(e.target.innerHTML);\n          selectBox.focus();\n          setToggleTyypitClick(false);\n          //Nämä seuraavat kaksi riviä on testiä\n          setTyyppiValittu(false);\n          setTyyppiValittu(true);\n          //document.getElementById(\"tyypitContainer\").style.display = \"none\";\n          dropmenuTyypitIsVisible = false;\n        }}\n      >\n        {tyyppi}\n      </p>\n    ));\n\n    return (\n      <animated.div\n        style={tyypitFade}\n        id={\"tyypitContainer\"}\n        className=\"options\"\n        /* style={{ display: \"none\" }} */\n      >\n        {options}\n      </animated.div>\n    );\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div>\n        <input\n          id={\"inputMaakunnat\"}\n          type={\"text\"}\n          value={valittuMaakunta}\n          onClick={() => /* naytaMaakunnat() */ {\n            /* setNaytaMaakuntaValikko(true); */\n            setToggleMaakunnatClick(!toggleMaakunnatClick);\n          }}\n          placeholder={\"Valitse maakunta\"}\n          readOnly\n        ></input>\n        {luoMaakuntaValikko()}\n\n        <input\n          id={\"inputTyypit\"}\n          inputMode={\"text\"}\n          value={valittuTyyppi}\n          onClick={() => {\n            /* naytaTyypit(); */\n            setToggleTyypitClick(!toggleTyypitClick);\n          }}\n          placeholder={\"Valitse tyyppi\"}\n          readOnly\n        ></input>\n\n        {luoTyypitValikko()}\n      </div>\n      {maakunnat.length > 0 && tyypit.length > 0 && paikat && rajatutPaikat && (\n        <div className=\"map-chart-wrapper\">\n          <Map\n            className=\"map\"\n            maakunta={valittuMaakunta}\n            tyyppi={valittuTyyppi}\n            kaikkiPaikat={[...paikatMaakunnassa]}\n            rajatutPaikat={[...rajatutPaikat]}\n            newLat={newLat}\n            newLong={newLong}\n            maakuntaValittu={maakuntaValittu}\n            tyyppiValittu={tyyppiValittu}\n          ></Map>\n          <div className=\"chart-wrapper\">\n            <BarChart\n              tyypit={[...tyypit]}\n              paikatMaakunnassa={chartData}\n              rajatutPaikat={rajatutPaikat}\n              maakunta={valittuMaakunta}\n            ></BarChart>\n\n            <PieChart\n              paikat={[...tyypit]}\n              paikatMaakunnassa={chartData}\n              maakunta={valittuMaakunta}\n            ></PieChart>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}