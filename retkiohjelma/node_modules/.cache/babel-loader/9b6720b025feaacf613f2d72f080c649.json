{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauli\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\JAMK\\\\retkisofta\\\\retkiohjelma\\\\src\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactMapGl, { Marker, Popup, TRANSITION_EVENTS } from \"react-map-gl\";\nimport { useTransition, animated, useSpring, config } from \"react-spring\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport icon from \"./red_pin.png\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst access_token = \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\n\nfunction Map(props) {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    latitude: 62,\n    longitude: 25,\n    zoom: 5,\n    transitionDuration: 500\n  });\n  const [paikat, setPaikat] = useState(props.rajatutPaikat);\n  const [kaikkiPaikat, setKaikkiPaikat] = useState(props.kaikkiPaikat);\n  const [valittuMarker, setValittuMarker] = useState();\n  const prevLat = useRef(props.newLat);\n  const prevLong = useRef(props.newLong);\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState(); // Tämä on uutta testikoodia\n\n  const transition = useTransition(paikat[0], {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    config: config.stiff\n  });\n  /* const styles = useSpring({\r\n    to: [{ opacity: 0 }, { opacity: 1 }],\r\n    from: { opacity: 0 },\r\n  }); */\n\n  /* const styles = useSpring({\r\n    to: async (next, cancel) => {\r\n      await next({ opacity: 1, marginTop: 0 });\r\n      await next({ opacity: 0 });\r\n    },\r\n    from: { opacity: 0, marginTop: -500 },\r\n  }); */\n\n  useEffect(() => {\n    const arr = [];\n    console.log(\"props paikat:\", props.rajatutPaikat);\n\n    for (let p in props.rajatutPaikat[0]) {\n      console.log(\"P:\", p);\n      setTimeout(() => {\n        arr.push(p);\n        setPaikat(arr);\n      }, 1000);\n    } //setPaikat(props.rajatutPaikat);\n\n\n    setValittuMarker(null);\n  }, [props.rajatutPaikat]);\n  /*  useEffect(() => {\r\n    console.log(\"RENDERÖIDÄÄN KAIKKI PAIKAT\");\r\n    setPaikat(props.kaikkiPaikat);\r\n  }, [props.kaikkiPaikat]); */\n\n  useEffect(() => {\n    if (props.newLat || props.newLong) {\n      setValittuMarker(null);\n      setViewport({\n        latitude: parseFloat(props.newLat),\n        longitude: parseFloat(props.newLong),\n        zoom: 5,\n        transitionDuration: 500\n      });\n    }\n  }, [props.newLat, props.newLong]);\n\n  const naytaPopUp = paikka => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: paikka.nimi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tyyppi: \", paikka.tyyppi]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Maakunta: \", paikka.maakunta]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Koordinaatit: \", paikka.koordinaatti]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ReactMapGl, {\n    className: \"map\",\n    ...viewport,\n    mapboxApiAccessToken: access_token,\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    height: 800,\n    width: 800,\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    children: [paikat.length == props.rajatutPaikat.length && transition.length > 0 && transition((styles, paikka) => {\n      let koord = paikka.koordinaatti.split(\",\");\n      return /*#__PURE__*/_jsxDEV(animated.div, {\n        style: styles,\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          className: \"markers\",\n          latitude: parseFloat(koord[0]),\n          longitude: parseFloat(koord[1]),\n          offsetLeft: -25 / 2,\n          offsetTop: -25 / 2,\n          onClick: () => {\n            setValittuMarker(paikka);\n            let koordinaatit = paikka.koordinaatti.split(\",\");\n            setLat(parseFloat(koordinaatit[0]));\n            setLong(parseFloat(koordinaatit[1]));\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"marker-images\",\n            src: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)\n      }, paikka.nimi, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this);\n    })\n    /* paikat.length > 0 &&\r\n      paikat[0].map((paikka, index) => {\r\n        let koord = paikka.koordinaatti.split(\",\");\r\n        return (\r\n          <animated.div key={paikka.nimi} style={styles}>\r\n            <Marker\r\n              key={index}\r\n              className=\"markers\"\r\n              latitude={parseFloat(koord[0])}\r\n              longitude={parseFloat(koord[1])}\r\n              offsetLeft={-25 / 2}\r\n              offsetTop={-25 / 2}\r\n              onClick={() => {\r\n                setValittuMarker(paikka);\r\n                let koordinaatit = paikka.koordinaatti.split(\",\");\r\n                setLat(parseFloat(koordinaatit[0]));\r\n                setLong(parseFloat(koordinaatit[1]));\r\n              }}\r\n            >\r\n              <img className=\"marker-images\" src={icon}></img>\r\n            </Marker>\r\n          </animated.div>\r\n        );\r\n      }) */\n    , valittuMarker && lat && long && /*#__PURE__*/_jsxDEV(Popup, {\n      latitude: lat,\n      longitude: long,\n      anchor: \"bottom\",\n      offsetTop: -25 / 2,\n      onClose: () => setValittuMarker(null),\n      children: naytaPopUp(valittuMarker)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"qZX3AjYE4CTGr3AMfSHaLIkVwgE=\", false, function () {\n  return [useTransition];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/sauli/OneDrive/Työpöytä/JAMK/retkisofta/retkiohjelma/src/Map.js"],"names":["React","useState","useEffect","useRef","ReactMapGl","Marker","Popup","TRANSITION_EVENTS","useTransition","animated","useSpring","config","TransitionGroup","CSSTransition","icon","access_token","Map","props","viewport","setViewport","latitude","longitude","zoom","transitionDuration","paikat","setPaikat","rajatutPaikat","kaikkiPaikat","setKaikkiPaikat","valittuMarker","setValittuMarker","prevLat","newLat","prevLong","newLong","lat","setLat","long","setLong","transition","from","opacity","enter","stiff","arr","console","log","p","setTimeout","push","parseFloat","naytaPopUp","paikka","nimi","tyyppi","maakunta","koordinaatti","length","styles","koord","split","koordinaatit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactMapGl, { Marker, Popup, TRANSITION_EVENTS } from \"react-map-gl\";\r\nimport { useTransition, animated, useSpring, config } from \"react-spring\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport icon from \"./red_pin.png\";\r\nimport \"./styles.css\";\r\n\r\nconst access_token =\r\n  \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\r\n\r\nfunction Map(props) {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 62,\r\n    longitude: 25,\r\n    zoom: 5,\r\n    transitionDuration: 500,\r\n  });\r\n\r\n  const [paikat, setPaikat] = useState(props.rajatutPaikat);\r\n  const [kaikkiPaikat, setKaikkiPaikat] = useState(props.kaikkiPaikat);\r\n  const [valittuMarker, setValittuMarker] = useState();\r\n  const prevLat = useRef(props.newLat);\r\n  const prevLong = useRef(props.newLong);\r\n  const [lat, setLat] = useState();\r\n  const [long, setLong] = useState();\r\n  // Tämä on uutta testikoodia\r\n  const transition = useTransition(paikat[0], {\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n\r\n    config: config.stiff,\r\n  });\r\n  /* const styles = useSpring({\r\n    to: [{ opacity: 0 }, { opacity: 1 }],\r\n    from: { opacity: 0 },\r\n  }); */\r\n  /* const styles = useSpring({\r\n    to: async (next, cancel) => {\r\n      await next({ opacity: 1, marginTop: 0 });\r\n      await next({ opacity: 0 });\r\n    },\r\n    from: { opacity: 0, marginTop: -500 },\r\n  }); */\r\n\r\n  useEffect(() => {\r\n    const arr = [];\r\n    console.log(\"props paikat:\", props.rajatutPaikat);\r\n    for (let p in props.rajatutPaikat[0]) {\r\n      console.log(\"P:\", p);\r\n      setTimeout(() => {\r\n        arr.push(p);\r\n        setPaikat(arr);\r\n      }, 1000);\r\n    }\r\n    //setPaikat(props.rajatutPaikat);\r\n    setValittuMarker(null);\r\n  }, [props.rajatutPaikat]);\r\n\r\n  /*  useEffect(() => {\r\n    console.log(\"RENDERÖIDÄÄN KAIKKI PAIKAT\");\r\n    setPaikat(props.kaikkiPaikat);\r\n  }, [props.kaikkiPaikat]); */\r\n\r\n  useEffect(() => {\r\n    if (props.newLat || props.newLong) {\r\n      setValittuMarker(null);\r\n      setViewport({\r\n        latitude: parseFloat(props.newLat),\r\n        longitude: parseFloat(props.newLong),\r\n        zoom: 5,\r\n        transitionDuration: 500,\r\n      });\r\n    }\r\n  }, [props.newLat, props.newLong]);\r\n\r\n  const naytaPopUp = (paikka) => {\r\n    return (\r\n      <div className=\"popup\">\r\n        <h3>{paikka.nimi}</h3>\r\n        <p>Tyyppi: {paikka.tyyppi}</p>\r\n        <p>Maakunta: {paikka.maakunta}</p>\r\n        <p>Koordinaatit: {paikka.koordinaatti}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ReactMapGl\r\n      className=\"map\"\r\n      {...viewport}\r\n      mapboxApiAccessToken={access_token}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n      height={800}\r\n      width={800}\r\n      onViewportChange={(viewport) => {\r\n        setViewport(viewport);\r\n      }}\r\n    >\r\n      {\r\n        paikat.length == props.rajatutPaikat.length &&\r\n          transition.length > 0 &&\r\n          transition((styles, paikka) => {\r\n            let koord = paikka.koordinaatti.split(\",\");\r\n            return (\r\n              <animated.div key={paikka.nimi} style={styles}>\r\n                <Marker\r\n                  className=\"markers\"\r\n                  latitude={parseFloat(koord[0])}\r\n                  longitude={parseFloat(koord[1])}\r\n                  offsetLeft={-25 / 2}\r\n                  offsetTop={-25 / 2}\r\n                  onClick={() => {\r\n                    setValittuMarker(paikka);\r\n                    let koordinaatit = paikka.koordinaatti.split(\",\");\r\n                    setLat(parseFloat(koordinaatit[0]));\r\n                    setLong(parseFloat(koordinaatit[1]));\r\n                  }}\r\n                >\r\n                  <img className=\"marker-images\" src={icon}></img>\r\n                </Marker>\r\n              </animated.div>\r\n            );\r\n          })\r\n        /* paikat.length > 0 &&\r\n          paikat[0].map((paikka, index) => {\r\n            let koord = paikka.koordinaatti.split(\",\");\r\n            return (\r\n              <animated.div key={paikka.nimi} style={styles}>\r\n                <Marker\r\n                  key={index}\r\n                  className=\"markers\"\r\n                  latitude={parseFloat(koord[0])}\r\n                  longitude={parseFloat(koord[1])}\r\n                  offsetLeft={-25 / 2}\r\n                  offsetTop={-25 / 2}\r\n                  onClick={() => {\r\n                    setValittuMarker(paikka);\r\n                    let koordinaatit = paikka.koordinaatti.split(\",\");\r\n                    setLat(parseFloat(koordinaatit[0]));\r\n                    setLong(parseFloat(koordinaatit[1]));\r\n                  }}\r\n                >\r\n                  <img className=\"marker-images\" src={icon}></img>\r\n                </Marker>\r\n              </animated.div>\r\n            );\r\n          }) */\r\n      }\r\n\r\n      {valittuMarker && lat && long && (\r\n        <Popup\r\n          latitude={lat}\r\n          longitude={long}\r\n          anchor=\"bottom\"\r\n          offsetTop={-25 / 2}\r\n          onClose={() => setValittuMarker(null)}\r\n        >\r\n          {naytaPopUp(valittuMarker)}\r\n        </Popup>\r\n      )}\r\n    </ReactMapGl>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}