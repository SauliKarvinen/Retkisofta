{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauli\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\JAMK\\\\retkisofta\\\\retkiohjelma\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Valikot from \"./Valikot\";\nimport Map from \"./Map\";\nimport BarChart from \"./BarChart\";\nimport PieChart from \"./PieChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://tulikartta.fi/api-json2.php\";\nlet dropmenuMaakunnatIsVisible = false;\nlet dropmenuTyypitIsVisible = false;\n\nfunction App() {\n  _s();\n\n  const [paikat, setPaikat] = useState([]);\n  const [maakunnat, setMaakunnat] = useState([]);\n  const [tyypit, setTyypit] = useState([]);\n  const [valittuMaakunta, setValittuMaakunta] = useState(\"\");\n  const [valittuTyyppi, setValittuTyyppi] = useState(\"\");\n  const [rajatutPaikat, setRajatutPaikat] = useState([]);\n  const [paikatMaakunnassa, setPaikatMaakunnassa] = useState([]);\n  const [newLat, setNewLat] = useState();\n  const [newLong, setNewLong] = useState();\n  useEffect(() => {\n    fetch(API_URL, {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }).then(response => {\n      console.log(response);\n      return response.json();\n    }).then(jsonData => {\n      const paikatArr = [...jsonData];\n      const maakunnatArr = [];\n      const tyypitArr = [];\n      tyypitArr.push(\"Näytä kaikki\");\n\n      for (let i of paikatArr) {\n        maakunnatArr.push(i.maakunta);\n        tyypitArr.push(i.tyyppi);\n      }\n\n      const maakunnatRemoveDuplicates = [...new Set(maakunnatArr)];\n      const tyypitRemoveDublicates = [...new Set(tyypitArr)];\n      setPaikat([...jsonData]);\n      setMaakunnat([...maakunnatRemoveDuplicates]);\n      setTyypit([...tyypitRemoveDublicates]);\n    });\n  }, []);\n  useEffect(() => {\n    paivitaPaikatMaakunnassa();\n    paivitaPaikat();\n  }, [valittuMaakunta]);\n  useEffect(() => {\n    paivitaPaikat();\n  }, [valittuMaakunta, valittuTyyppi]);\n\n  const paivitaPaikatMaakunnassa = () => {\n    const paikatMaakunnassaArr = paikat.filter(paikka => paikka.maakunta == valittuMaakunta);\n    setPaikatMaakunnassa([paikatMaakunnassaArr]);\n\n    if (valittuMaakunta != \"\") {\n      const splitKoordinaatit = paikatMaakunnassaArr[0].koordinaatti.split(\",\");\n      setNewLat(splitKoordinaatit[0]);\n      setNewLong(splitKoordinaatit[1]);\n    }\n  };\n\n  const naytaMaakunnat = () => {\n    let valikko = document.getElementById(\"maakunnatContainer\");\n    dropmenuMaakunnatIsVisible = !dropmenuMaakunnatIsVisible;\n\n    if (dropmenuMaakunnatIsVisible) {\n      valikko.style.display = \"block\";\n    } else {\n      valikko.style.display = \"none\";\n    }\n  };\n\n  const naytaTyypit = () => {\n    let valikko = document.getElementById(\"tyypitContainer\");\n    dropmenuTyypitIsVisible = !dropmenuTyypitIsVisible;\n\n    if (dropmenuTyypitIsVisible) {\n      valikko.style.display = \"block\";\n    } else {\n      valikko.style.display = \"none\";\n    }\n  };\n\n  const paivitaPaikat = () => {\n    if (valittuMaakunta != \"\") {\n      let rajatutPaikat = [];\n\n      async function f() {\n        {\n          rajatutPaikat = paikat.filter(paikka => paikka.maakunta == valittuMaakunta && paikka.tyyppi == valittuTyyppi);\n        }\n      }\n\n      f().then(() => setRajatutPaikat([rajatutPaikat]));\n    }\n  };\n\n  const luoMaakuntaValikko = () => {\n    let selectBox = document.getElementById(\"inputMaakunnat\");\n    const options = Object.values(maakunnat).map((maakunta, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"valinnat\",\n      onClick: e => {\n        selectBox.value = e.target.innerHTML;\n        setValittuMaakunta(e.target.innerHTML);\n        selectBox.focus();\n        document.getElementById(\"maakunnatContainer\").style.display = \"none\";\n        dropmenuMaakunnatIsVisible = false;\n      },\n      children: maakunta\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"maakunnatContainer\",\n      className: \"options\",\n      style: {\n        display: \"none\"\n      },\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  };\n\n  const luoTyypitValikko = () => {\n    let selectBox = document.getElementById(\"inputTyypit\");\n    const options = Object.values(tyypit).map((tyyppi, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"valinnat\",\n      onClick: e => {\n        selectBox.value = e.target.innerHTML;\n        setValittuTyyppi(e.target.innerHTML);\n        selectBox.focus();\n        document.getElementById(\"tyypitContainer\").style.display = \"none\";\n        dropmenuTyypitIsVisible = false;\n      },\n      children: tyyppi\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"tyypitContainer\",\n      className: \"options\",\n      style: {\n        display: \"none\"\n      },\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"inputMaakunnat\",\n        type: \"text\",\n        value: valittuMaakunta,\n        onClick: () => naytaMaakunnat(),\n        placeholder: \"Valitse maakunta\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), luoMaakuntaValikko(), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"inputTyypit\",\n        inputMode: \"text\",\n        value: valittuTyyppi,\n        onClick: () => {\n          naytaTyypit();\n        },\n        placeholder: \"Valitse tyyppi\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), luoTyypitValikko()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), maakunnat.length > 0 && tyypit.length > 0 && paikat && rajatutPaikat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-chart-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Map, {\n        className: \"map\",\n        maakunta: valittuMaakunta,\n        tyyppi: valittuTyyppi,\n        kaikkiPaikat: [...paikatMaakunnassa],\n        rajatutPaikat: [...rajatutPaikat],\n        newLat: newLat,\n        newLong: newLong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(BarChart, {\n          tyypit: [...tyypit],\n          paikatMaakunnassa: paikatMaakunnassa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          paikat: [...tyypit],\n          paikatMaakunnassa: paikatMaakunnassa,\n          maakunta: valittuMaakunta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vnNEEu68lnYpQ6NJIU1rzJ7mFgQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/sauli/OneDrive/Työpöytä/JAMK/retkisofta/retkiohjelma/src/App.js"],"names":["React","useState","useEffect","Valikot","Map","BarChart","PieChart","API_URL","dropmenuMaakunnatIsVisible","dropmenuTyypitIsVisible","App","paikat","setPaikat","maakunnat","setMaakunnat","tyypit","setTyypit","valittuMaakunta","setValittuMaakunta","valittuTyyppi","setValittuTyyppi","rajatutPaikat","setRajatutPaikat","paikatMaakunnassa","setPaikatMaakunnassa","newLat","setNewLat","newLong","setNewLong","fetch","Accept","then","response","console","log","json","jsonData","paikatArr","maakunnatArr","tyypitArr","push","i","maakunta","tyyppi","maakunnatRemoveDuplicates","Set","tyypitRemoveDublicates","paivitaPaikatMaakunnassa","paivitaPaikat","paikatMaakunnassaArr","filter","paikka","splitKoordinaatit","koordinaatti","split","naytaMaakunnat","valikko","document","getElementById","style","display","naytaTyypit","f","luoMaakuntaValikko","selectBox","options","Object","values","map","index","e","value","target","innerHTML","focus","luoTyypitValikko","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Valikot from \"./Valikot\";\nimport Map from \"./Map\";\nimport BarChart from \"./BarChart\";\nimport PieChart from \"./PieChart\";\n\nconst API_URL = \"https://tulikartta.fi/api-json2.php\";\nlet dropmenuMaakunnatIsVisible = false;\nlet dropmenuTyypitIsVisible = false;\n\nfunction App() {\n  const [paikat, setPaikat] = useState([]);\n  const [maakunnat, setMaakunnat] = useState([]);\n  const [tyypit, setTyypit] = useState([]);\n  const [valittuMaakunta, setValittuMaakunta] = useState(\"\");\n  const [valittuTyyppi, setValittuTyyppi] = useState(\"\");\n  const [rajatutPaikat, setRajatutPaikat] = useState([]);\n  const [paikatMaakunnassa, setPaikatMaakunnassa] = useState([]);\n  const [newLat, setNewLat] = useState();\n  const [newLong, setNewLong] = useState();\n\n  useEffect(() => {\n    fetch(API_URL, {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    })\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((jsonData) => {\n        const paikatArr = [...jsonData];\n        const maakunnatArr = [];\n        const tyypitArr = [];\n\n        tyypitArr.push(\"Näytä kaikki\");\n\n        for (let i of paikatArr) {\n          maakunnatArr.push(i.maakunta);\n          tyypitArr.push(i.tyyppi);\n        }\n        const maakunnatRemoveDuplicates = [...new Set(maakunnatArr)];\n        const tyypitRemoveDublicates = [...new Set(tyypitArr)];\n\n        setPaikat([...jsonData]);\n        setMaakunnat([...maakunnatRemoveDuplicates]);\n        setTyypit([...tyypitRemoveDublicates]);\n      });\n  }, []);\n\n  useEffect(() => {\n    paivitaPaikatMaakunnassa();\n    paivitaPaikat();\n  }, [valittuMaakunta]);\n\n  useEffect(() => {\n    paivitaPaikat();\n  }, [valittuMaakunta, valittuTyyppi]);\n\n  const paivitaPaikatMaakunnassa = () => {\n    const paikatMaakunnassaArr = paikat.filter(\n      (paikka) => paikka.maakunta == valittuMaakunta\n    );\n    setPaikatMaakunnassa([paikatMaakunnassaArr]);\n\n    if (valittuMaakunta != \"\") {\n      const splitKoordinaatit = paikatMaakunnassaArr[0].koordinaatti.split(\",\");\n      setNewLat(splitKoordinaatit[0]);\n      setNewLong(splitKoordinaatit[1]);\n    }\n  };\n\n  const naytaMaakunnat = () => {\n    let valikko = document.getElementById(\"maakunnatContainer\");\n\n    dropmenuMaakunnatIsVisible = !dropmenuMaakunnatIsVisible;\n    if (dropmenuMaakunnatIsVisible) {\n      valikko.style.display = \"block\";\n    } else {\n      valikko.style.display = \"none\";\n    }\n  };\n\n  const naytaTyypit = () => {\n    let valikko = document.getElementById(\"tyypitContainer\");\n\n    dropmenuTyypitIsVisible = !dropmenuTyypitIsVisible;\n    if (dropmenuTyypitIsVisible) {\n      valikko.style.display = \"block\";\n    } else {\n      valikko.style.display = \"none\";\n    }\n  };\n\n  const paivitaPaikat = () => {\n    if (valittuMaakunta != \"\") {\n      let rajatutPaikat = [];\n      async function f() {\n        {\n          rajatutPaikat = paikat.filter(\n            (paikka) =>\n              paikka.maakunta == valittuMaakunta &&\n              paikka.tyyppi == valittuTyyppi\n          );\n        }\n      }\n      f().then(() => setRajatutPaikat([rajatutPaikat]));\n    }\n  };\n\n  const luoMaakuntaValikko = () => {\n    let selectBox = document.getElementById(\"inputMaakunnat\");\n    const options = Object.values(maakunnat).map((maakunta, index) => (\n      <p\n        key={index}\n        className=\"valinnat\"\n        onClick={(e) => {\n          selectBox.value = e.target.innerHTML;\n          setValittuMaakunta(e.target.innerHTML);\n          selectBox.focus();\n          document.getElementById(\"maakunnatContainer\").style.display = \"none\";\n          dropmenuMaakunnatIsVisible = false;\n        }}\n      >\n        {maakunta}\n      </p>\n    ));\n\n    return (\n      <div\n        id={\"maakunnatContainer\"}\n        className=\"options\"\n        style={{ display: \"none\" }}\n      >\n        {options}\n      </div>\n    );\n  };\n\n  const luoTyypitValikko = () => {\n    let selectBox = document.getElementById(\"inputTyypit\");\n    const options = Object.values(tyypit).map((tyyppi, index) => (\n      <p\n        key={index}\n        className=\"valinnat\"\n        onClick={(e) => {\n          selectBox.value = e.target.innerHTML;\n          setValittuTyyppi(e.target.innerHTML);\n          selectBox.focus();\n          document.getElementById(\"tyypitContainer\").style.display = \"none\";\n          dropmenuTyypitIsVisible = false;\n        }}\n      >\n        {tyyppi}\n      </p>\n    ));\n\n    return (\n      <div\n        id={\"tyypitContainer\"}\n        className=\"options\"\n        style={{ display: \"none\" }}\n      >\n        {options}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <div>\n        <input\n          id={\"inputMaakunnat\"}\n          type={\"text\"}\n          value={valittuMaakunta}\n          onClick={() => naytaMaakunnat()}\n          placeholder={\"Valitse maakunta\"}\n          readOnly\n        ></input>\n\n        {luoMaakuntaValikko()}\n\n        <input\n          id={\"inputTyypit\"}\n          inputMode={\"text\"}\n          value={valittuTyyppi}\n          onClick={() => {\n            naytaTyypit();\n          }}\n          placeholder={\"Valitse tyyppi\"}\n          readOnly\n        ></input>\n\n        {luoTyypitValikko()}\n      </div>\n      {maakunnat.length > 0 && tyypit.length > 0 && paikat && rajatutPaikat && (\n        <div className=\"map-chart-wrapper\">\n          <Map\n            className=\"map\"\n            maakunta={valittuMaakunta}\n            tyyppi={valittuTyyppi}\n            kaikkiPaikat={[...paikatMaakunnassa]}\n            rajatutPaikat={[...rajatutPaikat]}\n            newLat={newLat}\n            newLong={newLong}\n          ></Map>\n          <div className=\"chart-wrapper\">\n            <BarChart\n              tyypit={[...tyypit]}\n              paikatMaakunnassa={paikatMaakunnassa}\n            ></BarChart>\n\n            <PieChart\n              paikat={[...tyypit]}\n              paikatMaakunnassa={paikatMaakunnassa}\n              maakunta={valittuMaakunta}\n            ></PieChart>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}