{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauli\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\JAMK\\\\retkisofta\\\\retkiohjelma\\\\src\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGl, { Marker, Popup } from \"react-map-gl\";\nimport icon from \"./red_pin.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst access_token = \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\n\nfunction Map(props) {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    latitude: 62,\n    longitude: 25,\n    zoom: 5\n  });\n  const [paikat, setPaikat] = useState([...props.data]);\n  console.log(\"PAIKAT\", paikat);\n  useEffect(() => {\n    setPaikat(props.data);\n  }, [props.data]); //console.log(\"map rendered\");\n  //console.log(\"paikat:\", props.data);\n\n  /* console.log(\"Mapissa maakunta: \", props.maakunta);\r\n  console.log(\"Mapissa tyyppi: \", props.tyyppi);\r\n  console.log(\"Mapissa paikat: \", props.data); */\n  //paikat[0].map((paikka, index) => console.log(\"Paikka\", paikka.maakunta));\n\n  const addMarkers = () => {\n    paikat[0].map((paikka, index) => {\n      let koord = paikka.koordinaatti.split(\",\");\n      console.log(koord[0]);\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        latitude: koord[0],\n        longitude: koord[1],\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ReactMapGl, {\n    className: \"map\",\n    ...viewport,\n    mapboxApiAccessToken: access_token,\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    height: 800,\n    width: 600,\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    children: paikat.length > 0 && paikat[0].map((paikka, index) => {\n      let koord = paikka.koordinaatti.split(\",\");\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        className: \"markers\",\n        latitude: parseFloat(koord[0]),\n        longitude: parseFloat(koord[1]),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"marker-images\",\n          src: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"j1TO2mL0J40J0Cf7FQHRkhFG/eY=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/sauli/OneDrive/Työpöytä/JAMK/retkisofta/retkiohjelma/src/Map.js"],"names":["React","useState","useEffect","ReactMapGl","Marker","Popup","icon","access_token","Map","props","viewport","setViewport","latitude","longitude","zoom","paikat","setPaikat","data","console","log","addMarkers","map","paikka","index","koord","koordinaatti","split","length","parseFloat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,IAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,cAA1C;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AACA,MAAMC,YAAY,GAChB,0FADF;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACvCW,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,SAAS,EAAE,EAF4B;AAGvCC,IAAAA,IAAI,EAAE;AAHiC,GAAD,CAAxC;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,CAAC,GAAGQ,KAAK,CAACQ,IAAV,CAAD,CAApC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,SAAS,CAACP,KAAK,CAACQ,IAAP,CAAT;AACD,GAFQ,EAEN,CAACR,KAAK,CAACQ,IAAP,CAFM,CAAT,CAVkB,CAclB;AACA;;AACA;AACF;AACA;AAEE;;AAEA,QAAMG,UAAU,GAAG,MAAM;AACvBL,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAV,CAAc,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC/B,UAAIC,KAAK,GAAGF,MAAM,CAACG,YAAP,CAAoBC,KAApB,CAA0B,GAA1B,CAAZ;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAAC,CAAD,CAAjB;AACA,0BACE,QAAC,MAAD;AAAoB,QAAA,QAAQ,EAAEA,KAAK,CAAC,CAAD,CAAnC;AAAwC,QAAA,SAAS,EAAEA,KAAK,CAAC,CAAD,CAAxD;AAAA,+BACE;AAAK,UAAA,GAAG,EAAElB;AAAV;AAAA;AAAA;AAAA;AAAA;AADF,SAAaiB,KAAb;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KARD;AASD,GAVD;;AAYA,sBACE,QAAC,UAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAAA,OAEMb,QAFN;AAGE,IAAA,oBAAoB,EAAEH,YAHxB;AAIE,IAAA,QAAQ,EAAC,oCAJX;AAKE,IAAA,MAAM,EAAE,GALV;AAME,IAAA,KAAK,EAAE,GANT;AAOE,IAAA,gBAAgB,EAAGG,QAAD,IAAc;AAC9BC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KATH;AAAA,cAWGK,MAAM,CAACY,MAAP,GAAgB,CAAhB,IACCZ,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAV,CAAc,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC/B,UAAIC,KAAK,GAAGF,MAAM,CAACG,YAAP,CAAoBC,KAApB,CAA0B,GAA1B,CAAZ;AACA,0BACE,QAAC,MAAD;AAEE,QAAA,SAAS,EAAC,SAFZ;AAGE,QAAA,QAAQ,EAAEE,UAAU,CAACJ,KAAK,CAAC,CAAD,CAAN,CAHtB;AAIE,QAAA,SAAS,EAAEI,UAAU,CAACJ,KAAK,CAAC,CAAD,CAAN,CAJvB;AAAA,+BAME;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,GAAG,EAAElB;AAApC;AAAA;AAAA;AAAA;AAAA;AANF,SACOiB,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAZD;AAZJ;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA9DQf,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGl, { Marker, Popup } from \"react-map-gl\";\r\nimport icon from \"./red_pin.png\";\r\nconst access_token =\r\n  \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\r\n\r\nfunction Map(props) {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 62,\r\n    longitude: 25,\r\n    zoom: 5,\r\n  });\r\n\r\n  const [paikat, setPaikat] = useState([...props.data]);\r\n  console.log(\"PAIKAT\", paikat);\r\n\r\n  useEffect(() => {\r\n    setPaikat(props.data);\r\n  }, [props.data]);\r\n\r\n  //console.log(\"map rendered\");\r\n  //console.log(\"paikat:\", props.data);\r\n  /* console.log(\"Mapissa maakunta: \", props.maakunta);\r\n  console.log(\"Mapissa tyyppi: \", props.tyyppi);\r\n  console.log(\"Mapissa paikat: \", props.data); */\r\n\r\n  //paikat[0].map((paikka, index) => console.log(\"Paikka\", paikka.maakunta));\r\n\r\n  const addMarkers = () => {\r\n    paikat[0].map((paikka, index) => {\r\n      let koord = paikka.koordinaatti.split(\",\");\r\n      console.log(koord[0]);\r\n      return (\r\n        <Marker key={index} latitude={koord[0]} longitude={koord[1]}>\r\n          <img src={icon}></img>\r\n        </Marker>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ReactMapGl\r\n      className=\"map\"\r\n      {...viewport}\r\n      mapboxApiAccessToken={access_token}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n      height={800}\r\n      width={600}\r\n      onViewportChange={(viewport) => {\r\n        setViewport(viewport);\r\n      }}\r\n    >\r\n      {paikat.length > 0 &&\r\n        paikat[0].map((paikka, index) => {\r\n          let koord = paikka.koordinaatti.split(\",\");\r\n          return (\r\n            <Marker\r\n              key={index}\r\n              className=\"markers\"\r\n              latitude={parseFloat(koord[0])}\r\n              longitude={parseFloat(koord[1])}\r\n            >\r\n              <img className=\"marker-images\" src={icon}></img>\r\n            </Marker>\r\n          );\r\n        })}\r\n    </ReactMapGl>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}