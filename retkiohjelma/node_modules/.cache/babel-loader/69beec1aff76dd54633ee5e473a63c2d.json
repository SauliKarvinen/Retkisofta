{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauli\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\JAMK\\\\retkisofta\\\\retkiohjelma\\\\src\\\\BarChart.js\",\n    _s = $RefreshSig$();\n\nimport { _adapters } from \"chart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BarChart(props) {\n  _s();\n\n  const [tyypit, setTyypit] = useState(props.tyypit);\n  const [maakuntaValittu, setMaakuntaValittu] = useState(props.maakunta);\n  const [paikatMaakunnassa, setPaikatMaakunnassa] = useState(props.paikatMaakunnassa);\n  const [tyyppimaarat, setTyyppimaarat] = useState([]);\n  const [maakuntaVaihdettu, setMaakuntaVaihdettu] = useState(false);\n  useEffect(() => {\n    setMaakuntaVaihdettu(true);\n  }, [props.maakunta]);\n  useEffect(() => {\n    setTyypit(poistaNaytaKaikkiVaihtoehto(props.tyypit));\n  }, [props.tyypit]);\n  useEffect(() => {\n    setPaikatMaakunnassa(props.paikatMaakunnassa);\n    laskeMaarat();\n    console.log(\"MAAKUNTA VALITTU:\", props.maakuntaValittu);\n  }, [props.paikatMaakunnassa]);\n\n  const poistaNaytaKaikkiVaihtoehto = arr => {\n    arr.shift();\n    return arr;\n  };\n\n  const laskeMaarat = () => {\n    if (maakuntaVaihdettu) {\n      let laavut = 0;\n      let kodat = 0;\n      let paivatuvat = 0;\n      let nuotiopaikat = 0;\n      let luolat = 0;\n      let auotiotuvat = 0;\n      let ruokailukatokset = 0;\n      let nahtavyydet = 0;\n      let lintutornit = 0;\n      let varaustuvat = 0;\n      let kammit = 0;\n      let porokampat = 0;\n      let lahteet = 0;\n      let maarat = [];\n\n      async function f() {\n        console.log(\"PAIKAT ENNEN TYYPPIEN LASKEMISTA:\", props.paikatMaakunnassa[0]);\n\n        for (let paikka of props.paikatMaakunnassa[0]) {\n          switch (paikka.tyyppi) {\n            case \"Laavu\":\n              laavut++;\n              break;\n\n            case \"Kota\":\n              kodat++;\n              break;\n\n            case \"Päivätupa\":\n              paivatuvat++;\n              break;\n\n            case \"Nuotiopaikka\":\n              nuotiopaikat++;\n              break;\n\n            case \"Luola\":\n              luolat++;\n              break;\n\n            case \"Autiotupa\":\n              auotiotuvat++;\n              break;\n\n            case \"Ruokailukatos\":\n              ruokailukatokset++;\n              break;\n\n            case \"Nähtävyys\":\n              nahtavyydet++;\n              break;\n\n            case \"Lintutorni\":\n              lintutornit++;\n              break;\n\n            case \"Varaustupa\":\n              varaustuvat++;\n              break;\n\n            case \"Kammi\":\n              kammit++;\n              break;\n\n            case \"Porokämppä\":\n              porokampat++;\n              break;\n\n            case \"Lähde\":\n              lahteet++;\n              break;\n\n            default:\n              break;\n          }\n        }\n      }\n\n      f().then(() => {\n        maarat = [laavut, kodat, paivatuvat, nuotiopaikat, luolat, auotiotuvat, ruokailukatokset, nahtavyydet, lintutornit, varaustuvat, kammit, porokampat, lahteet];\n        console.log(\"LASKETUT MÄÄRÄT: \", maarat);\n        setTyyppimaarat(maarat); //laskeProsentit(maarat);\n      });\n    }\n    /* const laskeProsentit = (maarat) => {\r\n    const paikkoja = props.paikatMaakunnassa.length;\r\n    let pros = [];\r\n    async function f() {\r\n      pros = maarat.map((maara) => ((maara / paikkoja) * 100).toFixed());\r\n    }\r\n      f().then(() => {\r\n      let listassaOnDataa = false;\r\n      for (let m of maarat) {\r\n        if (m > 0) {\r\n          listassaOnDataa = true;\r\n        }\r\n      }\r\n        if (listassaOnDataa) {\r\n        setProsentit(pros);\r\n      } else {\r\n        setProsentit([100]);\r\n      }\r\n    });\r\n    }; */\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"barchart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: {\n            labels: [...tyypit],\n            datasets: [{\n              label: \"Paikkoja yhteensä\",\n              data: [...tyyppimaarat],\n              backgroundColor: [\"rgba(255, 0, 0, 0.8)\", \"rgba(255, 50, 0, 0.8)\", \"rgba(255, 100, 0, 0.8)\", \"rgba(255, 150, 0, 0.8)\", \"rgba(255, 200, 0, 0.8)\", \"rgba(255, 250, 0, 0.8)\", \"rgba(200, 255, 0, 0.8)\", \"rgba(150, 255, 0, 0.8)\", \"rgba(100, 255, 0, 0.8)\", \"rgba(50, 255, 0, 0.8)\", \"rgba(0, 255, 0, 0.8)\", \"rgba(0, 255, 50, 0.8)\", \"rgba(0, 255, 100, 0.8)\"]\n            }]\n          },\n          options: {\n            animation: {\n              duration: 0\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  };\n}\n\n_s(BarChart, \"kL96gSbjJIe+oAafaGVfWRtzMLM=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["C:/Users/sauli/OneDrive/Työpöytä/JAMK/retkisofta/retkiohjelma/src/BarChart.js"],"names":["_adapters","React","useState","useEffect","Bar","BarChart","props","tyypit","setTyypit","maakuntaValittu","setMaakuntaValittu","maakunta","paikatMaakunnassa","setPaikatMaakunnassa","tyyppimaarat","setTyyppimaarat","maakuntaVaihdettu","setMaakuntaVaihdettu","poistaNaytaKaikkiVaihtoehto","laskeMaarat","console","log","arr","shift","laavut","kodat","paivatuvat","nuotiopaikat","luolat","auotiotuvat","ruokailukatokset","nahtavyydet","lintutornit","varaustuvat","kammit","porokampat","lahteet","maarat","f","paikka","tyyppi","then","labels","datasets","label","data","backgroundColor","animation","duration"],"mappings":"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","sourcesContent":["import { _adapters } from \"chart.js\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nfunction BarChart(props) {\r\n  const [tyypit, setTyypit] = useState(props.tyypit);\r\n  const [maakuntaValittu, setMaakuntaValittu] = useState(props.maakunta);\r\n  const [paikatMaakunnassa, setPaikatMaakunnassa] = useState(\r\n    props.paikatMaakunnassa\r\n  );\r\n  const [tyyppimaarat, setTyyppimaarat] = useState([]);\r\n  const [maakuntaVaihdettu, setMaakuntaVaihdettu] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMaakuntaVaihdettu(true);\r\n  }, [props.maakunta]);\r\n\r\n  useEffect(() => {\r\n    setTyypit(poistaNaytaKaikkiVaihtoehto(props.tyypit));\r\n  }, [props.tyypit]);\r\n\r\n  useEffect(() => {\r\n    setPaikatMaakunnassa(props.paikatMaakunnassa);\r\n    laskeMaarat();\r\n    console.log(\"MAAKUNTA VALITTU:\", props.maakuntaValittu);\r\n  }, [props.paikatMaakunnassa]);\r\n\r\n  const poistaNaytaKaikkiVaihtoehto = (arr) => {\r\n    arr.shift();\r\n    return arr;\r\n  };\r\n\r\n  const laskeMaarat = () => {\r\n    if (maakuntaVaihdettu) {\r\n      let laavut = 0;\r\n      let kodat = 0;\r\n      let paivatuvat = 0;\r\n      let nuotiopaikat = 0;\r\n      let luolat = 0;\r\n      let auotiotuvat = 0;\r\n      let ruokailukatokset = 0;\r\n      let nahtavyydet = 0;\r\n      let lintutornit = 0;\r\n      let varaustuvat = 0;\r\n      let kammit = 0;\r\n      let porokampat = 0;\r\n      let lahteet = 0;\r\n      let maarat = [];\r\n\r\n      async function f() {\r\n        console.log(\r\n          \"PAIKAT ENNEN TYYPPIEN LASKEMISTA:\",\r\n          props.paikatMaakunnassa[0]\r\n        );\r\n        for (let paikka of props.paikatMaakunnassa[0]) {\r\n          switch (paikka.tyyppi) {\r\n            case \"Laavu\":\r\n              laavut++;\r\n              break;\r\n            case \"Kota\":\r\n              kodat++;\r\n              break;\r\n            case \"Päivätupa\":\r\n              paivatuvat++;\r\n              break;\r\n            case \"Nuotiopaikka\":\r\n              nuotiopaikat++;\r\n              break;\r\n            case \"Luola\":\r\n              luolat++;\r\n              break;\r\n            case \"Autiotupa\":\r\n              auotiotuvat++;\r\n              break;\r\n            case \"Ruokailukatos\":\r\n              ruokailukatokset++;\r\n              break;\r\n            case \"Nähtävyys\":\r\n              nahtavyydet++;\r\n              break;\r\n            case \"Lintutorni\":\r\n              lintutornit++;\r\n              break;\r\n            case \"Varaustupa\":\r\n              varaustuvat++;\r\n              break;\r\n            case \"Kammi\":\r\n              kammit++;\r\n              break;\r\n            case \"Porokämppä\":\r\n              porokampat++;\r\n              break;\r\n            case \"Lähde\":\r\n              lahteet++;\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      }\r\n\r\n      f().then(() => {\r\n        maarat = [\r\n          laavut,\r\n          kodat,\r\n          paivatuvat,\r\n          nuotiopaikat,\r\n          luolat,\r\n          auotiotuvat,\r\n          ruokailukatokset,\r\n          nahtavyydet,\r\n          lintutornit,\r\n          varaustuvat,\r\n          kammit,\r\n          porokampat,\r\n          lahteet,\r\n        ];\r\n        console.log(\"LASKETUT MÄÄRÄT: \", maarat);\r\n        setTyyppimaarat(maarat);\r\n        //laskeProsentit(maarat);\r\n      });\r\n    }\r\n\r\n    /* const laskeProsentit = (maarat) => {\r\n    const paikkoja = props.paikatMaakunnassa.length;\r\n    let pros = [];\r\n    async function f() {\r\n      pros = maarat.map((maara) => ((maara / paikkoja) * 100).toFixed());\r\n    }\r\n\r\n    f().then(() => {\r\n      let listassaOnDataa = false;\r\n      for (let m of maarat) {\r\n        if (m > 0) {\r\n          listassaOnDataa = true;\r\n        }\r\n      }\r\n\r\n      if (listassaOnDataa) {\r\n        setProsentit(pros);\r\n      } else {\r\n        setProsentit([100]);\r\n      }\r\n    });\r\n  }; */\r\n\r\n    return (\r\n      <div className=\"charts-wrapper\">\r\n        <div className=\"barchart-wrapper\">\r\n          <Bar\r\n            data={{\r\n              labels: [...tyypit],\r\n              datasets: [\r\n                {\r\n                  label: \"Paikkoja yhteensä\",\r\n                  data: [...tyyppimaarat],\r\n                  backgroundColor: [\r\n                    \"rgba(255, 0, 0, 0.8)\",\r\n                    \"rgba(255, 50, 0, 0.8)\",\r\n                    \"rgba(255, 100, 0, 0.8)\",\r\n                    \"rgba(255, 150, 0, 0.8)\",\r\n                    \"rgba(255, 200, 0, 0.8)\",\r\n                    \"rgba(255, 250, 0, 0.8)\",\r\n                    \"rgba(200, 255, 0, 0.8)\",\r\n                    \"rgba(150, 255, 0, 0.8)\",\r\n                    \"rgba(100, 255, 0, 0.8)\",\r\n                    \"rgba(50, 255, 0, 0.8)\",\r\n                    \"rgba(0, 255, 0, 0.8)\",\r\n                    \"rgba(0, 255, 50, 0.8)\",\r\n                    \"rgba(0, 255, 100, 0.8)\",\r\n                  ],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              animation: {\r\n                duration: 0,\r\n              },\r\n            }}\r\n          ></Bar>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default BarChart;\r\n"]},"metadata":{},"sourceType":"module"}