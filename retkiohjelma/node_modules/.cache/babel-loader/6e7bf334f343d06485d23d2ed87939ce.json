{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauli\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\JAMK\\\\retkisofta\\\\retkiohjelma\\\\src\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactMapGl, { Marker, Popup, TRANSITION_EVENTS } from \"react-map-gl\";\nimport { useTransition, animated, useSpring, config } from \"react-spring\";\nimport { BeatLoader } from \"react-spinners\";\nimport icon from \"./red_pin.png\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst access_token = \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\n\nfunction Map(props) {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    latitude: 62.952544,\n    longitude: 26.040375,\n    zoom: 5,\n    transitionDuration: 500\n  });\n  const [paikat, setPaikat] = useState(props.rajatutPaikat);\n  const [kaikkiPaikat, setKaikkiPaikat] = useState(props.kaikkiPaikat);\n  const [valittuMarker, setValittuMarker] = useState();\n  const prevLat = useRef(props.newLat);\n  const prevLong = useRef(props.newLong);\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState();\n  const [mapLoaded, setMapLoaded] = useState(props.mapLoaded); // Tämä on uutta testikoodia\n\n  const transition = useTransition(paikat[0], {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    delay: 500\n  });\n  useEffect(() => {\n    setPaikat(props.rajatutPaikat);\n    setValittuMarker(null);\n  }, [props.rajatutPaikat]);\n  useEffect(() => {\n    if (props.newLat || props.newLong) {\n      setValittuMarker(null);\n      setViewport({\n        latitude: parseFloat(props.newLat),\n        longitude: parseFloat(props.newLong),\n        zoom: 5,\n        transitionDuration: 500\n      });\n    }\n  }, [props.newLat, props.newLong]);\n\n  const naytaPopUp = paikka => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: paikka.nimi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tyyppi: \", paikka.tyyppi]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Maakunta: \", paikka.maakunta]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Koordinaatit: \", paikka.koordinaatti]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!mapLoaded && /*#__PURE__*/_jsxDEV(BeatLoader, {\n      loading: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }, this), mapLoaded && /*#__PURE__*/_jsxDEV(ReactMapGl, {\n      className: \"map\",\n      ...viewport,\n      mapboxApiAccessToken: access_token,\n      mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n      height: 715,\n      width: 800,\n      onViewportChange: viewport => {\n        setViewport(viewport);\n      },\n      children: [paikat.length > 0 && transition.length > 0 && transition((styles, paikka) => {\n        let koord = paikka.koordinaatti.split(\",\");\n        return /*#__PURE__*/_jsxDEV(animated.div, {\n          style: styles,\n          children: /*#__PURE__*/_jsxDEV(Marker, {\n            className: \"markers\",\n            latitude: parseFloat(koord[0]),\n            longitude: parseFloat(koord[1]),\n            offsetLeft: -25 / 2,\n            offsetTop: -25 / 2,\n            onClick: () => {\n              setValittuMarker(paikka);\n              let koordinaatit = paikka.koordinaatti.split(\",\");\n              setLat(parseFloat(koordinaatit[0]));\n              setLong(parseFloat(koordinaatit[1]));\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"marker-images\",\n              src: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)\n        }, paikka.nimi, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this);\n      })\n      /* paikat.length > 0 &&\r\n      paikat[0].map((paikka, index) => {\r\n      let koord = paikka.koordinaatti.split(\",\");\r\n      return (\r\n        <animated.div key={paikka.nimi} style={styles}>\r\n          <Marker\r\n            key={index}\r\n            className=\"markers\"\r\n            latitude={parseFloat(koord[0])}\r\n            longitude={parseFloat(koord[1])}\r\n            offsetLeft={-25 / 2}\r\n            offsetTop={-25 / 2}\r\n            onClick={() => {\r\n              setValittuMarker(paikka);\r\n              let koordinaatit = paikka.koordinaatti.split(\",\");\r\n              setLat(parseFloat(koordinaatit[0]));\r\n              setLong(parseFloat(koordinaatit[1]));\r\n            }}\r\n          >\r\n            <img className=\"marker-images\" src={icon}></img>\r\n          </Marker>\r\n        </animated.div>\r\n      );\r\n      }) */\n      , valittuMarker && lat && long && /*#__PURE__*/_jsxDEV(Popup, {\n        latitude: lat,\n        longitude: long,\n        anchor: \"bottom\",\n        offsetTop: -25 / 2,\n        onClose: () => setValittuMarker(null),\n        children: naytaPopUp(valittuMarker)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"Z9ds+sf0Y4BUumh9YG4RvaK4ot0=\", false, function () {\n  return [useTransition];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/sauli/OneDrive/Työpöytä/JAMK/retkisofta/retkiohjelma/src/Map.js"],"names":["React","useState","useEffect","useRef","ReactMapGl","Marker","Popup","TRANSITION_EVENTS","useTransition","animated","useSpring","config","BeatLoader","icon","access_token","Map","props","viewport","setViewport","latitude","longitude","zoom","transitionDuration","paikat","setPaikat","rajatutPaikat","kaikkiPaikat","setKaikkiPaikat","valittuMarker","setValittuMarker","prevLat","newLat","prevLong","newLong","lat","setLat","long","setLong","mapLoaded","setMapLoaded","transition","from","opacity","enter","delay","parseFloat","naytaPopUp","paikka","nimi","tyyppi","maakunta","koordinaatti","length","styles","koord","split","koordinaatit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactMapGl, { Marker, Popup, TRANSITION_EVENTS } from \"react-map-gl\";\r\nimport { useTransition, animated, useSpring, config } from \"react-spring\";\r\nimport { BeatLoader } from \"react-spinners\";\r\nimport icon from \"./red_pin.png\";\r\nimport \"./styles.css\";\r\n\r\nconst access_token =\r\n  \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\r\n\r\nfunction Map(props) {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 62.952544,\r\n    longitude: 26.040375,\r\n    zoom: 5,\r\n    transitionDuration: 500,\r\n  });\r\n\r\n  const [paikat, setPaikat] = useState(props.rajatutPaikat);\r\n  const [kaikkiPaikat, setKaikkiPaikat] = useState(props.kaikkiPaikat);\r\n  const [valittuMarker, setValittuMarker] = useState();\r\n  const prevLat = useRef(props.newLat);\r\n  const prevLong = useRef(props.newLong);\r\n  const [lat, setLat] = useState();\r\n  const [long, setLong] = useState();\r\n  const [mapLoaded, setMapLoaded] = useState(props.mapLoaded);\r\n  // Tämä on uutta testikoodia\r\n  const transition = useTransition(paikat[0], {\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    delay: 500,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPaikat(props.rajatutPaikat);\r\n    setValittuMarker(null);\r\n  }, [props.rajatutPaikat]);\r\n\r\n  useEffect(() => {\r\n    if (props.newLat || props.newLong) {\r\n      setValittuMarker(null);\r\n      setViewport({\r\n        latitude: parseFloat(props.newLat),\r\n        longitude: parseFloat(props.newLong),\r\n        zoom: 5,\r\n        transitionDuration: 500,\r\n      });\r\n    }\r\n  }, [props.newLat, props.newLong]);\r\n\r\n  const naytaPopUp = (paikka) => {\r\n    return (\r\n      <div className=\"popup\">\r\n        <h3>{paikka.nimi}</h3>\r\n        <p>Tyyppi: {paikka.tyyppi}</p>\r\n        <p>Maakunta: {paikka.maakunta}</p>\r\n        <p>Koordinaatit: {paikka.koordinaatti}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!mapLoaded && <BeatLoader loading></BeatLoader>}\r\n      {mapLoaded && (\r\n        <ReactMapGl\r\n          className=\"map\"\r\n          {...viewport}\r\n          mapboxApiAccessToken={access_token}\r\n          mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n          height={715}\r\n          width={800}\r\n          onViewportChange={(viewport) => {\r\n            setViewport(viewport);\r\n          }}\r\n        >\r\n          {\r\n            paikat.length > 0 &&\r\n              transition.length > 0 &&\r\n              transition((styles, paikka) => {\r\n                let koord = paikka.koordinaatti.split(\",\");\r\n                return (\r\n                  <animated.div key={paikka.nimi} style={styles}>\r\n                    <Marker\r\n                      className=\"markers\"\r\n                      latitude={parseFloat(koord[0])}\r\n                      longitude={parseFloat(koord[1])}\r\n                      offsetLeft={-25 / 2}\r\n                      offsetTop={-25 / 2}\r\n                      onClick={() => {\r\n                        setValittuMarker(paikka);\r\n                        let koordinaatit = paikka.koordinaatti.split(\",\");\r\n                        setLat(parseFloat(koordinaatit[0]));\r\n                        setLong(parseFloat(koordinaatit[1]));\r\n                      }}\r\n                    >\r\n                      <img className=\"marker-images\" src={icon}></img>\r\n                    </Marker>\r\n                  </animated.div>\r\n                );\r\n              })\r\n            /* paikat.length > 0 &&\r\n          paikat[0].map((paikka, index) => {\r\n            let koord = paikka.koordinaatti.split(\",\");\r\n            return (\r\n              <animated.div key={paikka.nimi} style={styles}>\r\n                <Marker\r\n                  key={index}\r\n                  className=\"markers\"\r\n                  latitude={parseFloat(koord[0])}\r\n                  longitude={parseFloat(koord[1])}\r\n                  offsetLeft={-25 / 2}\r\n                  offsetTop={-25 / 2}\r\n                  onClick={() => {\r\n                    setValittuMarker(paikka);\r\n                    let koordinaatit = paikka.koordinaatti.split(\",\");\r\n                    setLat(parseFloat(koordinaatit[0]));\r\n                    setLong(parseFloat(koordinaatit[1]));\r\n                  }}\r\n                >\r\n                  <img className=\"marker-images\" src={icon}></img>\r\n                </Marker>\r\n              </animated.div>\r\n            );\r\n          }) */\r\n          }\r\n\r\n          {valittuMarker && lat && long && (\r\n            <Popup\r\n              latitude={lat}\r\n              longitude={long}\r\n              anchor=\"bottom\"\r\n              offsetTop={-25 / 2}\r\n              onClose={() => setValittuMarker(null)}\r\n            >\r\n              {naytaPopUp(valittuMarker)}\r\n            </Popup>\r\n          )}\r\n        </ReactMapGl>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}