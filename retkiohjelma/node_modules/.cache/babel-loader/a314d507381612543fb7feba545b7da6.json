{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauli\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\JAMK\\\\retkisofta\\\\retkiohjelma\\\\src\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGl, { Marker, Popup } from \"react-map-gl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst access_token = \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\n\nfunction Map(props) {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    latitude: 62,\n    longitude: 25,\n    zoom: 5\n  });\n  const [paikat, setPaikat] = useState([]);\n  useEffect(() => {}, [paikat]);\n\n  const addMarkers = () => {};\n\n  console.log(\"map rendered\");\n  console.log(\"paikat:\", paikat);\n  /* console.log(\"Mapissa maakunta: \", props.maakunta);\r\n  console.log(\"Mapissa tyyppi: \", props.tyyppi);\r\n  console.log(\"Mapissa paikat: \", props.data); */\n\n  const paivitaPaikat = () => {\n    if (props.maakunta && props.tyyppi) {\n      let rajatutPaikat = [];\n\n      async function f() {\n        {\n          rajatutPaikat = props.data.filter(paikka => paikka.maakunta == props.maakunta && paikka.tyyppi == props.tyyppi);\n        }\n      }\n\n      f().then(setPaikat([rajatutPaikat]));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ReactMapGl, {\n    className: \"map\",\n    ...viewport,\n    mapboxApiAccessToken: access_token,\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    height: 800,\n    width: 600,\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    children: paivitaPaikat()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"9xmm0GSAlgxxrIoZnmR67bJ50os=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/sauli/OneDrive/Työpöytä/JAMK/retkisofta/retkiohjelma/src/Map.js"],"names":["React","useState","useEffect","ReactMapGl","Marker","Popup","access_token","Map","props","viewport","setViewport","latitude","longitude","zoom","paikat","setPaikat","addMarkers","console","log","paivitaPaikat","maakunta","tyyppi","rajatutPaikat","f","data","filter","paikka","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,IAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,cAA1C;;AACA,MAAMC,YAAY,GAChB,0FADF;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,SAAS,EAAE,EAF4B;AAGvCC,IAAAA,IAAI,EAAE;AAHiC,GAAD,CAAxC;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACY,MAAD,CAAX,CAAT;;AAEA,QAAME,UAAU,GAAG,MAAM,CAAE,CAA3B;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,MAAvB;AACA;AACF;AACA;;AAEE,QAAMK,aAAa,GAAG,MAAM;AAC1B,QAAIX,KAAK,CAACY,QAAN,IAAkBZ,KAAK,CAACa,MAA5B,EAAoC;AAClC,UAAIC,aAAa,GAAG,EAApB;;AACA,qBAAeC,CAAf,GAAmB;AACjB;AACED,UAAAA,aAAa,GAAGd,KAAK,CAACgB,IAAN,CAAWC,MAAX,CACbC,MAAD,IACEA,MAAM,CAACN,QAAP,IAAmBZ,KAAK,CAACY,QAAzB,IAAqCM,MAAM,CAACL,MAAP,IAAiBb,KAAK,CAACa,MAFhD,CAAhB;AAID;AACF;;AAEDE,MAAAA,CAAC,GAAGI,IAAJ,CAASZ,SAAS,CAAC,CAACO,aAAD,CAAD,CAAlB;AACD;AACF,GAdD;;AAgBA,sBACE,QAAC,UAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAAA,OAEMb,QAFN;AAGE,IAAA,oBAAoB,EAAEH,YAHxB;AAIE,IAAA,QAAQ,EAAC,oCAJX;AAKE,IAAA,MAAM,EAAE,GALV;AAME,IAAA,KAAK,EAAE,GANT;AAOE,IAAA,gBAAgB,EAAGG,QAAD,IAAc;AAC9BC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KATH;AAAA,cAWGU,aAAa;AAXhB;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlDQZ,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGl, { Marker, Popup } from \"react-map-gl\";\r\nconst access_token =\r\n  \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\r\n\r\nfunction Map(props) {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 62,\r\n    longitude: 25,\r\n    zoom: 5,\r\n  });\r\n\r\n  const [paikat, setPaikat] = useState([]);\r\n\r\n  useEffect(() => {}, [paikat]);\r\n\r\n  const addMarkers = () => {};\r\n\r\n  console.log(\"map rendered\");\r\n  console.log(\"paikat:\", paikat);\r\n  /* console.log(\"Mapissa maakunta: \", props.maakunta);\r\n  console.log(\"Mapissa tyyppi: \", props.tyyppi);\r\n  console.log(\"Mapissa paikat: \", props.data); */\r\n\r\n  const paivitaPaikat = () => {\r\n    if (props.maakunta && props.tyyppi) {\r\n      let rajatutPaikat = [];\r\n      async function f() {\r\n        {\r\n          rajatutPaikat = props.data.filter(\r\n            (paikka) =>\r\n              paikka.maakunta == props.maakunta && paikka.tyyppi == props.tyyppi\r\n          );\r\n        }\r\n      }\r\n\r\n      f().then(setPaikat([rajatutPaikat]));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ReactMapGl\r\n      className=\"map\"\r\n      {...viewport}\r\n      mapboxApiAccessToken={access_token}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n      height={800}\r\n      width={600}\r\n      onViewportChange={(viewport) => {\r\n        setViewport(viewport);\r\n      }}\r\n    >\r\n      {paivitaPaikat()}\r\n    </ReactMapGl>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}