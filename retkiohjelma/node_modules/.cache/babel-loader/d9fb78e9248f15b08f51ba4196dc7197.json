{"ast":null,"code":"import _toConsumableArray from\"C:/Users/sauli/OneDrive/Ty\\xF6p\\xF6yt\\xE4/JAMK/retkisofta/retkiohjelma/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:/Users/sauli/OneDrive/Ty\\xF6p\\xF6yt\\xE4/JAMK/retkisofta/retkiohjelma/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"C:/Users/sauli/OneDrive/Ty\\xF6p\\xF6yt\\xE4/JAMK/retkisofta/retkiohjelma/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"C:/Users/sauli/OneDrive/Ty\\xF6p\\xF6yt\\xE4/JAMK/retkisofta/retkiohjelma/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/sauli/OneDrive/Ty\\xF6p\\xF6yt\\xE4/JAMK/retkisofta/retkiohjelma/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Bar}from\"react-chartjs-2\";// Barchart komponentti\nimport{jsx as _jsx}from\"react/jsx-runtime\";function BarChart(props){var _useState=useState(props.tyypit),_useState2=_slicedToArray(_useState,2),tyypit=_useState2[0],setTyypit=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tyyppimaarat=_useState4[0],setTyyppimaarat=_useState4[1];useEffect(function(){laskeMaarat();},[props.paikatMaakunnassa]);useEffect(function(){setTyypit(poistaNaytaKaikkiVaihtoehto(props.tyypit));},[props.tyypit]);var poistaNaytaKaikkiVaihtoehto=function poistaNaytaKaikkiVaihtoehto(arr){// Poistaa \"'Näytä kaikki' -vaihdoehdon\" listasta\narr.shift();return arr;};// Laskee kaikkien paikkojen määrät BarChartiin\nvar laskeMaarat=function laskeMaarat(){var laavut=0;var kodat=0;var paivatuvat=0;var nuotiopaikat=0;var luolat=0;var auotiotuvat=0;var ruokailukatokset=0;var nahtavyydet=0;var lintutornit=0;var varaustuvat=0;var kammit=0;var porokampat=0;var lahteet=0;var maarat=[];function f(){return _f.apply(this,arguments);}function _f(){_f=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _iterator,_step,paikka;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_iterator=_createForOfIteratorHelper(props.paikatMaakunnassa[0]);_context.prev=1;_iterator.s();case 3:if((_step=_iterator.n()).done){_context.next=37;break;}paikka=_step.value;_context.t0=paikka.tyyppi;_context.next=_context.t0===\"Laavu\"?8:_context.t0===\"Kota\"?10:_context.t0===\"Päivätupa\"?12:_context.t0===\"Nuotiopaikka\"?14:_context.t0===\"Luola\"?16:_context.t0===\"Autiotupa\"?18:_context.t0===\"Ruokailukatos\"?20:_context.t0===\"Nähtävyys\"?22:_context.t0===\"Lintutorni\"?24:_context.t0===\"Varaustupa\"?26:_context.t0===\"Kammi\"?28:_context.t0===\"Porokämppä\"?30:_context.t0===\"Lähde\"?32:34;break;case 8:laavut++;return _context.abrupt(\"break\",35);case 10:kodat++;return _context.abrupt(\"break\",35);case 12:paivatuvat++;return _context.abrupt(\"break\",35);case 14:nuotiopaikat++;return _context.abrupt(\"break\",35);case 16:luolat++;return _context.abrupt(\"break\",35);case 18:auotiotuvat++;return _context.abrupt(\"break\",35);case 20:ruokailukatokset++;return _context.abrupt(\"break\",35);case 22:nahtavyydet++;return _context.abrupt(\"break\",35);case 24:lintutornit++;return _context.abrupt(\"break\",35);case 26:varaustuvat++;return _context.abrupt(\"break\",35);case 28:kammit++;return _context.abrupt(\"break\",35);case 30:porokampat++;return _context.abrupt(\"break\",35);case 32:lahteet++;return _context.abrupt(\"break\",35);case 34:return _context.abrupt(\"break\",35);case 35:_context.next=3;break;case 37:_context.next=42;break;case 39:_context.prev=39;_context.t1=_context[\"catch\"](1);_iterator.e(_context.t1);case 42:_context.prev=42;_iterator.f();return _context.finish(42);case 45:case\"end\":return _context.stop();}}},_callee,null,[[1,39,42,45]]);}));return _f.apply(this,arguments);}f().then(function(){maarat=[laavut,kodat,paivatuvat,nuotiopaikat,luolat,auotiotuvat,ruokailukatokset,nahtavyydet,lintutornit,varaustuvat,kammit,porokampat,lahteet];setTyyppimaarat(maarat);});};// Palauttaa kaavion\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"charts-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"barchart-wrapper\",children:/*#__PURE__*/_jsx(Bar,{data:{labels:_toConsumableArray(tyypit),datasets:[{label:\"Paikkoja yhteensä\",data:_toConsumableArray(tyyppimaarat),backgroundColor:[\"rgba(255, 0, 0, 0.8)\",\"rgba(255, 50, 0, 0.8)\",\"rgba(255, 100, 0, 0.8)\",\"rgba(255, 150, 0, 0.8)\",\"rgba(255, 200, 0, 0.8)\",\"rgba(255, 250, 0, 0.8)\",\"rgba(200, 255, 0, 0.8)\",\"rgba(150, 255, 0, 0.8)\",\"rgba(100, 255, 0, 0.8)\",\"rgba(50, 255, 0, 0.8)\",\"rgba(0, 255, 0, 0.8)\",\"rgba(0, 255, 50, 0.8)\",\"rgba(0, 255, 100, 0.8)\"]}]},options:{animation:{duration:0}}})})});}export default BarChart;","map":{"version":3,"sources":["C:/Users/sauli/OneDrive/Työpöytä/JAMK/retkisofta/retkiohjelma/src/BarChart.js"],"names":["React","useState","useEffect","Bar","BarChart","props","tyypit","setTyypit","tyyppimaarat","setTyyppimaarat","laskeMaarat","paikatMaakunnassa","poistaNaytaKaikkiVaihtoehto","arr","shift","laavut","kodat","paivatuvat","nuotiopaikat","luolat","auotiotuvat","ruokailukatokset","nahtavyydet","lintutornit","varaustuvat","kammit","porokampat","lahteet","maarat","f","paikka","tyyppi","then","labels","datasets","label","data","backgroundColor","animation","duration"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\n// Barchart komponentti\r\nfunction BarChart(props) {\r\n  const [tyypit, setTyypit] = useState(props.tyypit);\r\n  const [tyyppimaarat, setTyyppimaarat] = useState([]);\r\n\r\n  useEffect(() => {\r\n    laskeMaarat();\r\n  }, [props.paikatMaakunnassa]);\r\n\r\n  useEffect(() => {\r\n    setTyypit(poistaNaytaKaikkiVaihtoehto(props.tyypit));\r\n  }, [props.tyypit]);\r\n\r\n  const poistaNaytaKaikkiVaihtoehto = (arr) => {\r\n    // Poistaa \"'Näytä kaikki' -vaihdoehdon\" listasta\r\n    arr.shift();\r\n    return arr;\r\n  };\r\n\r\n  // Laskee kaikkien paikkojen määrät BarChartiin\r\n  const laskeMaarat = () => {\r\n    let laavut = 0;\r\n    let kodat = 0;\r\n    let paivatuvat = 0;\r\n    let nuotiopaikat = 0;\r\n    let luolat = 0;\r\n    let auotiotuvat = 0;\r\n    let ruokailukatokset = 0;\r\n    let nahtavyydet = 0;\r\n    let lintutornit = 0;\r\n    let varaustuvat = 0;\r\n    let kammit = 0;\r\n    let porokampat = 0;\r\n    let lahteet = 0;\r\n    let maarat = [];\r\n\r\n    async function f() {\r\n      for (let paikka of props.paikatMaakunnassa[0]) {\r\n        switch (paikka.tyyppi) {\r\n          case \"Laavu\":\r\n            laavut++;\r\n            break;\r\n          case \"Kota\":\r\n            kodat++;\r\n            break;\r\n          case \"Päivätupa\":\r\n            paivatuvat++;\r\n            break;\r\n          case \"Nuotiopaikka\":\r\n            nuotiopaikat++;\r\n            break;\r\n          case \"Luola\":\r\n            luolat++;\r\n            break;\r\n          case \"Autiotupa\":\r\n            auotiotuvat++;\r\n            break;\r\n          case \"Ruokailukatos\":\r\n            ruokailukatokset++;\r\n            break;\r\n          case \"Nähtävyys\":\r\n            nahtavyydet++;\r\n            break;\r\n          case \"Lintutorni\":\r\n            lintutornit++;\r\n            break;\r\n          case \"Varaustupa\":\r\n            varaustuvat++;\r\n            break;\r\n          case \"Kammi\":\r\n            kammit++;\r\n            break;\r\n          case \"Porokämppä\":\r\n            porokampat++;\r\n            break;\r\n          case \"Lähde\":\r\n            lahteet++;\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    f().then(() => {\r\n      maarat = [\r\n        laavut,\r\n        kodat,\r\n        paivatuvat,\r\n        nuotiopaikat,\r\n        luolat,\r\n        auotiotuvat,\r\n        ruokailukatokset,\r\n        nahtavyydet,\r\n        lintutornit,\r\n        varaustuvat,\r\n        kammit,\r\n        porokampat,\r\n        lahteet,\r\n      ];\r\n      setTyyppimaarat(maarat);\r\n    });\r\n  };\r\n\r\n  // Palauttaa kaavion\r\n  return (\r\n    <div className=\"charts-wrapper\">\r\n      <div className=\"barchart-wrapper\">\r\n        <Bar\r\n          data={{\r\n            labels: [...tyypit],\r\n            datasets: [\r\n              {\r\n                label: \"Paikkoja yhteensä\",\r\n                data: [...tyyppimaarat],\r\n                backgroundColor: [\r\n                  \"rgba(255, 0, 0, 0.8)\",\r\n                  \"rgba(255, 50, 0, 0.8)\",\r\n                  \"rgba(255, 100, 0, 0.8)\",\r\n                  \"rgba(255, 150, 0, 0.8)\",\r\n                  \"rgba(255, 200, 0, 0.8)\",\r\n                  \"rgba(255, 250, 0, 0.8)\",\r\n                  \"rgba(200, 255, 0, 0.8)\",\r\n                  \"rgba(150, 255, 0, 0.8)\",\r\n                  \"rgba(100, 255, 0, 0.8)\",\r\n                  \"rgba(50, 255, 0, 0.8)\",\r\n                  \"rgba(0, 255, 0, 0.8)\",\r\n                  \"rgba(0, 255, 50, 0.8)\",\r\n                  \"rgba(0, 255, 100, 0.8)\",\r\n                ],\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            animation: {\r\n              duration: 0,\r\n            },\r\n          }}\r\n        ></Bar>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n"]},"metadata":{},"sourceType":"module"}