{"version":3,"sources":["red_pin.png","Map.js","BarChart.js","PieChart.js","App.js","index.js"],"names":["mapboxgl","workerClass","MapboxWorker","Map","props","paikka","useState","latitude","longitude","zoom","transitionDuration","viewport","setViewport","rajatutPaikat","paikat","setPaikat","valittuMarker","setValittuMarker","lat","setLat","long","setLong","transition","useTransition","from","opacity","enter","delay","useEffect","newLat","newLong","parseFloat","className","mapboxApiAccessToken","mapStyle","height","width","onViewportChange","length","styles","koord","koordinaatti","split","div","style","offsetLeft","offsetTop","onClick","koordinaatit","src","icon","alt","nimi","anchor","onClose","tyyppi","maakunta","BarChart","tyypit","setTyypit","tyyppimaarat","setTyyppimaarat","laskeMaarat","paikatMaakunnassa","poistaNaytaKaikkiVaihtoehto","arr","shift","laavut","kodat","paivatuvat","nuotiopaikat","luolat","auotiotuvat","ruokailukatokset","nahtavyydet","lintutornit","varaustuvat","kammit","porokampat","lahteet","a","f","then","data","labels","datasets","label","backgroundColor","options","animation","duration","PieChart","prosentit","setProsentit","render","setRender","laskeProsentit","maarat","paikkoja","pros","map","maara","toFixed","listassaOnDataa","App","maakunnat","setMaakunnat","valittuMaakunta","setValittuMaakunta","valittuTyyppi","setValittuTyyppi","setRajatutPaikat","setPaikatMaakunnassa","setNewLat","setNewLong","toggleMaakunnatClick","setToggleMaakunnatClick","toggleTyypitClick","setToggleTyypitClick","chartData","setChartData","isLoading","setIsLoading","maakunnatFade","useSpring","position","border","tyypitFade","fetch","Accept","response","console","log","json","jsonData","paikatArr","maakunnatArr","tyypitArr","push","i","maakunnatRemoveDuplicates","Set","tyypitRemoveDublicates","paivitaPaikatMaakunnassa","paivitaChartData","paivitaPaikat","chartDataArr","filter","paikatMaakunnassaArr","splitKoordinaatit","top","color","fontSize","textAlign","size","loading","id","type","value","placeholder","readOnly","selectBox","document","getElementById","Object","values","index","e","target","innerHTML","focus","luoMaakuntaValikko","inputMode","luoTyypitValikko","kaikkiPaikat","ReactDOM"],"mappings":"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","file":"static/js/main.43b4eb7b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/red_pin.0b3d60a0.png\";","import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGl, { Marker, Popup } from \"react-map-gl\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport icon from \"./red_pin.png\";\r\nimport \"./styles.css\";\r\nimport mapboxgl from \"mapbox-gl\";\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapboxWorker from \"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\";\r\nmapboxgl.workerClass = MapboxWorker;\r\n\r\n// Mapbox-gl access-token\r\nconst access_token =\r\n  \"pk.eyJ1Ijoic2F1bGlrIiwiYSI6ImNrcWM4NXJoYzAwdzkybm56djVka2VzZW0ifQ.QmYDZh6DNEwu5ITY9lQ6Ag\";\r\n\r\n// Kartta default-arvoilla\r\nfunction Map(props) {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 62.952544,\r\n    longitude: 26.040375,\r\n    zoom: 5,\r\n    transitionDuration: 500,\r\n  });\r\n\r\n  const [paikat, setPaikat] = useState(props.rajatutPaikat);\r\n  const [valittuMarker, setValittuMarker] = useState();\r\n  const [lat, setLat] = useState();\r\n  const [long, setLong] = useState();\r\n  // Markereiden fade-in\r\n  const transition = useTransition(paikat[0], {\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    delay: 500,\r\n  });\r\n\r\n  // Päivitetään paikat\r\n  useEffect(() => {\r\n    setPaikat(props.rajatutPaikat);\r\n    setValittuMarker(null);\r\n  }, [props.rajatutPaikat]);\r\n\r\n  // Kun koordinaatit muuttuvat, kohdistetaan kartta uuteen sijaintiin\r\n  useEffect(() => {\r\n    if (props.newLat || props.newLong) {\r\n      setValittuMarker(null);\r\n      setViewport({\r\n        latitude: parseFloat(props.newLat),\r\n        longitude: parseFloat(props.newLong),\r\n        zoom: 5,\r\n        transitionDuration: 500,\r\n      });\r\n    }\r\n  }, [props.newLat, props.newLong]);\r\n\r\n  // Avaa popup ikkunan\r\n  const naytaPopUp = (paikka) => {\r\n    return (\r\n      <div className=\"popup\">\r\n        <h3>{paikka.nimi}</h3>\r\n        <p>Tyyppi: {paikka.tyyppi}</p>\r\n        <p>Maakunta: {paikka.maakunta}</p>\r\n        <p>Koordinaatit: {paikka.koordinaatti}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Palauttaa kartan\r\n  return (\r\n    <ReactMapGl\r\n      className=\"map\"\r\n      {...viewport}\r\n      mapboxApiAccessToken={access_token}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n      height={715}\r\n      width={800}\r\n      onViewportChange={(viewport) => {\r\n        setViewport(viewport);\r\n      }}\r\n    >\r\n      {/* \r\n      Jos paikkoja on valittu, lisää markerit\r\n       */}\r\n      {paikat.length > 0 &&\r\n        transition.length > 0 &&\r\n        transition((styles, paikka) => {\r\n          let koord = paikka.koordinaatti.split(\",\");\r\n          return (\r\n            <animated.div key={paikka.nimi} style={styles}>\r\n              <Marker\r\n                className=\"markers\"\r\n                latitude={parseFloat(koord[0])}\r\n                longitude={parseFloat(koord[1])}\r\n                offsetLeft={-25 / 2}\r\n                offsetTop={-25 / 2}\r\n                onClick={() => {\r\n                  setValittuMarker(paikka);\r\n                  let koordinaatit = paikka.koordinaatti.split(\",\");\r\n                  setLat(parseFloat(koordinaatit[0]));\r\n                  setLong(parseFloat(koordinaatit[1]));\r\n                }}\r\n              >\r\n                <img className=\"marker-images\" src={icon} alt=\"no image\"></img>\r\n              </Marker>\r\n            </animated.div>\r\n          );\r\n        })}\r\n\r\n      {/* \r\n        Jos markeria on klikattu, avataan popup\r\n        */}\r\n      {valittuMarker && lat && long && (\r\n        <Popup\r\n          latitude={lat}\r\n          longitude={long}\r\n          anchor=\"bottom\"\r\n          offsetTop={-25 / 2}\r\n          onClose={() => setValittuMarker(null)}\r\n        >\r\n          {naytaPopUp(valittuMarker)}\r\n        </Popup>\r\n      )}\r\n    </ReactMapGl>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\n// Barchart komponentti\r\nfunction BarChart(props) {\r\n  const [tyypit, setTyypit] = useState(props.tyypit);\r\n  const [tyyppimaarat, setTyyppimaarat] = useState([]);\r\n\r\n  useEffect(() => {\r\n    laskeMaarat();\r\n  }, [props.paikatMaakunnassa]);\r\n\r\n  useEffect(() => {\r\n    setTyypit(poistaNaytaKaikkiVaihtoehto(props.tyypit));\r\n  }, [props.tyypit]);\r\n\r\n  const poistaNaytaKaikkiVaihtoehto = (arr) => {\r\n    // Poistaa \"'Näytä kaikki' -vaihdoehdon\" listasta\r\n    arr.shift();\r\n    return arr;\r\n  };\r\n\r\n  // Laskee kaikkien paikkojen määrät BarChartiin\r\n  const laskeMaarat = () => {\r\n    let laavut = 0;\r\n    let kodat = 0;\r\n    let paivatuvat = 0;\r\n    let nuotiopaikat = 0;\r\n    let luolat = 0;\r\n    let auotiotuvat = 0;\r\n    let ruokailukatokset = 0;\r\n    let nahtavyydet = 0;\r\n    let lintutornit = 0;\r\n    let varaustuvat = 0;\r\n    let kammit = 0;\r\n    let porokampat = 0;\r\n    let lahteet = 0;\r\n    let maarat = [];\r\n\r\n    async function f() {\r\n      for (let paikka of props.paikatMaakunnassa[0]) {\r\n        switch (paikka.tyyppi) {\r\n          case \"Laavu\":\r\n            laavut++;\r\n            break;\r\n          case \"Kota\":\r\n            kodat++;\r\n            break;\r\n          case \"Päivätupa\":\r\n            paivatuvat++;\r\n            break;\r\n          case \"Nuotiopaikka\":\r\n            nuotiopaikat++;\r\n            break;\r\n          case \"Luola\":\r\n            luolat++;\r\n            break;\r\n          case \"Autiotupa\":\r\n            auotiotuvat++;\r\n            break;\r\n          case \"Ruokailukatos\":\r\n            ruokailukatokset++;\r\n            break;\r\n          case \"Nähtävyys\":\r\n            nahtavyydet++;\r\n            break;\r\n          case \"Lintutorni\":\r\n            lintutornit++;\r\n            break;\r\n          case \"Varaustupa\":\r\n            varaustuvat++;\r\n            break;\r\n          case \"Kammi\":\r\n            kammit++;\r\n            break;\r\n          case \"Porokämppä\":\r\n            porokampat++;\r\n            break;\r\n          case \"Lähde\":\r\n            lahteet++;\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    f().then(() => {\r\n      maarat = [\r\n        laavut,\r\n        kodat,\r\n        paivatuvat,\r\n        nuotiopaikat,\r\n        luolat,\r\n        auotiotuvat,\r\n        ruokailukatokset,\r\n        nahtavyydet,\r\n        lintutornit,\r\n        varaustuvat,\r\n        kammit,\r\n        porokampat,\r\n        lahteet,\r\n      ];\r\n      setTyyppimaarat(maarat);\r\n    });\r\n  };\r\n\r\n  // Palauttaa kaavion\r\n  return (\r\n    <div className=\"charts-wrapper\">\r\n      <div className=\"barchart-wrapper\">\r\n        <Bar\r\n          data={{\r\n            labels: [...tyypit],\r\n            datasets: [\r\n              {\r\n                label: \"Paikkoja yhteensä\",\r\n                data: [...tyyppimaarat],\r\n                backgroundColor: [\r\n                  \"rgba(255, 0, 0, 0.8)\",\r\n                  \"rgba(255, 50, 0, 0.8)\",\r\n                  \"rgba(255, 100, 0, 0.8)\",\r\n                  \"rgba(255, 150, 0, 0.8)\",\r\n                  \"rgba(255, 200, 0, 0.8)\",\r\n                  \"rgba(255, 250, 0, 0.8)\",\r\n                  \"rgba(200, 255, 0, 0.8)\",\r\n                  \"rgba(150, 255, 0, 0.8)\",\r\n                  \"rgba(100, 255, 0, 0.8)\",\r\n                  \"rgba(50, 255, 0, 0.8)\",\r\n                  \"rgba(0, 255, 0, 0.8)\",\r\n                  \"rgba(0, 255, 50, 0.8)\",\r\n                  \"rgba(0, 255, 100, 0.8)\",\r\n                ],\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            animation: {\r\n              duration: 0,\r\n            },\r\n          }}\r\n        ></Bar>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nfunction PieChart(props) {\r\n  const [tyypit, setTyypit] = useState(props.paikat);\r\n  const [prosentit, setProsentit] = useState([]);\r\n  const [render, setRender] = useState(false);\r\n\r\n  // Päivittää tyypit\r\n  useEffect(() => {\r\n    setTyypit(poistaNaytaKaikkiVaihtoehto(props.paikat));\r\n    laskeMaarat();\r\n    setRender(true);\r\n  }, [props.paikatMaakunnassa]);\r\n\r\n  // Laskee paikkojen määrät\r\n  const laskeMaarat = () => {\r\n    let laavut = 0;\r\n    let kodat = 0;\r\n    let paivatuvat = 0;\r\n    let nuotiopaikat = 0;\r\n    let luolat = 0;\r\n    let auotiotuvat = 0;\r\n    let ruokailukatokset = 0;\r\n    let nahtavyydet = 0;\r\n    let lintutornit = 0;\r\n    let varaustuvat = 0;\r\n    let kammit = 0;\r\n    let porokampat = 0;\r\n    let lahteet = 0;\r\n    let maarat = [];\r\n\r\n    async function f() {\r\n      for (let paikka of props.paikatMaakunnassa[0]) {\r\n        switch (paikka.tyyppi) {\r\n          case \"Laavu\":\r\n            laavut++;\r\n            break;\r\n          case \"Kota\":\r\n            kodat++;\r\n            break;\r\n          case \"Päivätupa\":\r\n            paivatuvat++;\r\n            break;\r\n          case \"Nuotiopaikka\":\r\n            nuotiopaikat++;\r\n            break;\r\n          case \"Luola\":\r\n            luolat++;\r\n            break;\r\n          case \"Autiotupa\":\r\n            auotiotuvat++;\r\n            break;\r\n          case \"Ruokailukatos\":\r\n            ruokailukatokset++;\r\n            break;\r\n          case \"Nähtävyys\":\r\n            nahtavyydet++;\r\n            break;\r\n          case \"Lintutorni\":\r\n            lintutornit++;\r\n            break;\r\n          case \"Varaustupa\":\r\n            varaustuvat++;\r\n            break;\r\n          case \"Kammi\":\r\n            kammit++;\r\n            break;\r\n          case \"Porokämppä\":\r\n            porokampat++;\r\n            break;\r\n          case \"Lähde\":\r\n            lahteet++;\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    f().then(() => {\r\n      maarat = [\r\n        laavut,\r\n        kodat,\r\n        paivatuvat,\r\n        nuotiopaikat,\r\n        luolat,\r\n        auotiotuvat,\r\n        ruokailukatokset,\r\n        nahtavyydet,\r\n        lintutornit,\r\n        varaustuvat,\r\n        kammit,\r\n        porokampat,\r\n        lahteet,\r\n      ];\r\n      laskeProsentit(maarat);\r\n    });\r\n  };\r\n\r\n  // Poistaa 'Näytä kaikki' -vaihtoehdon listasta\r\n  const poistaNaytaKaikkiVaihtoehto = (arr) => {\r\n    arr.shift();\r\n    return arr;\r\n  };\r\n\r\n  // Laskee prosenttiosuudet paikoista\r\n  const laskeProsentit = (maarat) => {\r\n    const paikkoja = props.paikatMaakunnassa[0].length;\r\n    let pros = [];\r\n    async function f() {\r\n      pros = maarat.map((maara) => ((maara / paikkoja) * 100).toFixed());\r\n    }\r\n\r\n    f().then(() => {\r\n      let listassaOnDataa = false;\r\n      for (let m of maarat) {\r\n        if (m > 0) {\r\n          listassaOnDataa = true;\r\n        }\r\n      }\r\n\r\n      if (listassaOnDataa) {\r\n        setProsentit(pros);\r\n      } else {\r\n        setProsentit([100]);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Palauttaa kaavion\r\n  return (\r\n    render && (\r\n      <div className=\"piechart-wrapper\">\r\n        <h2>Prosenttia paikoista</h2>\r\n        <Pie\r\n          data={{\r\n            labels: [...tyypit],\r\n            datasets: [\r\n              {\r\n                label: \"Prosenttia paikoista\",\r\n                data: [...prosentit],\r\n                backgroundColor: [\r\n                  \"rgba(255, 0, 0, 0.8)\",\r\n                  \"rgba(255, 100, 0, 0.8)\",\r\n                  \"rgba(255, 200, 0, 0.8)\",\r\n                  \"rgba(200, 255, 0, 0.8)\",\r\n                  \"rgba(100, 255, 0, 0.8)\",\r\n                  \"rgba(0, 255, 0, 0.8)\",\r\n                  \"rgba(0, 255, 100, 0.8)\",\r\n                  \"rgba(0, 255, 200, 0.8)\",\r\n                  \"rgba(0, 200, 255, 0.8)\",\r\n                  \"rgba(0, 100, 255, 0.8)\",\r\n                  \"rgba(0, 0, 255, 0.8)\",\r\n                  \"rgba(100, 0, 255, 0.8)\",\r\n                  \"rgba(100, 150, 255, 0.8)\",\r\n                ],\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            animation: {\r\n              duration: 0,\r\n            },\r\n          }}\r\n        ></Pie>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport Map from \"./Map\";\nimport BarChart from \"./BarChart\";\nimport PieChart from \"./PieChart\";\nimport { BeatLoader } from \"react-spinners\";\n\n// Tulikartta API\nconst API_URL = \"https://tulikartta.fi/api-json2.php\";\n\nfunction App() {\n  const [paikat, setPaikat] = useState([]);\n  const [maakunnat, setMaakunnat] = useState([]);\n  const [tyypit, setTyypit] = useState([]);\n  const [valittuMaakunta, setValittuMaakunta] = useState(\"\");\n  const [valittuTyyppi, setValittuTyyppi] = useState(\"\");\n  const [rajatutPaikat, setRajatutPaikat] = useState([]);\n  const [paikatMaakunnassa, setPaikatMaakunnassa] = useState([]);\n  const [newLat, setNewLat] = useState();\n  const [newLong, setNewLong] = useState();\n  const [toggleMaakunnatClick, setToggleMaakunnatClick] = useState(false);\n  const [toggleTyypitClick, setToggleTyypitClick] = useState(false);\n  const [chartData, setChartData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Maakunnat -valikon dropdown animaatio\n  const maakunnatFade = useSpring({\n    position: \"absolute\",\n    border: toggleMaakunnatClick ? 1 : 0,\n    height: toggleMaakunnatClick ? 100 : 0,\n    width: 200,\n  });\n\n  // Tyypit -valikon dropdown animaatio\n  const tyypitFade = useSpring({\n    position: \"absolute\",\n    border: toggleTyypitClick ? 1 : 0,\n    height: toggleTyypitClick ? 100 : 0,\n    width: 200,\n  });\n\n  // Sivun latautuessa haetaan data\n  useEffect(() => {\n    fetch(API_URL, {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    })\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((jsonData) => {\n        const paikatArr = [...jsonData];\n        const maakunnatArr = [];\n        const tyypitArr = [];\n\n        tyypitArr.push(\"Näytä kaikki\");\n\n        for (let i of paikatArr) {\n          maakunnatArr.push(i.maakunta);\n          tyypitArr.push(i.tyyppi);\n        }\n        const maakunnatRemoveDuplicates = [...new Set(maakunnatArr)];\n        const tyypitRemoveDublicates = [...new Set(tyypitArr)];\n\n        setPaikat([...jsonData]);\n        setMaakunnat([...maakunnatRemoveDuplicates]);\n        setTyypit([...tyypitRemoveDublicates]);\n        setIsLoading(false);\n      });\n  }, []);\n\n  // Päivitetään paikat valitussa maakunnassa kun valitaan maakunta\n  useEffect(() => {\n    paivitaPaikatMaakunnassa();\n    paivitaChartData();\n    return () => {};\n  }, [valittuMaakunta]);\n\n  // Päivitetään kaikki paikat kun valitaan tyyppi\n  useEffect(() => {\n    paivitaPaikat();\n  }, [valittuTyyppi]);\n\n  // Päivittää kaavioille lähetettävän datan\n  const paivitaChartData = () => {\n    const chartDataArr = paikat.filter(\n      (paikka) => paikka.maakunta == valittuMaakunta\n    );\n\n    setChartData([chartDataArr]);\n  };\n\n  // Päivittää paikat valitussa maakunnassa\n  const paivitaPaikatMaakunnassa = () => {\n    let paikatMaakunnassaArr = [];\n\n    if (valittuTyyppi == \"Näytä kaikki\" || valittuTyyppi == \"\") {\n      paikatMaakunnassaArr = paikat.filter(\n        (paikka) => paikka.maakunta == valittuMaakunta\n      );\n      setChartData([paikatMaakunnassaArr]);\n    } else {\n      paikatMaakunnassaArr = paikat.filter(\n        (paikka) =>\n          paikka.maakunta == valittuMaakunta && paikka.tyyppi == valittuTyyppi\n      );\n    }\n    setPaikatMaakunnassa([paikatMaakunnassaArr]);\n    setRajatutPaikat([paikatMaakunnassaArr]);\n\n    if (valittuMaakunta != \"\" && paikatMaakunnassaArr[0]) {\n      const splitKoordinaatit = paikatMaakunnassaArr[0].koordinaatti.split(\",\");\n      setNewLat(splitKoordinaatit[0]);\n      setNewLong(splitKoordinaatit[1]);\n    }\n  };\n\n  // Päivittää kaikki paikat valitun maakunnan ja tyypin mukaan\n  const paivitaPaikat = () => {\n    if (valittuMaakunta != \"\" && valittuTyyppi != \"Näytä kaikki\") {\n      let rajatutPaikat = [];\n      async function f() {\n        {\n          rajatutPaikat = paikat.filter(\n            (paikka) =>\n              paikka.maakunta == valittuMaakunta &&\n              paikka.tyyppi == valittuTyyppi\n          );\n        }\n      }\n      f().then(() => setRajatutPaikat([rajatutPaikat]));\n    } else if (valittuTyyppi == \"Näytä kaikki\") {\n      paivitaPaikatMaakunnassa();\n    }\n  };\n\n  // Luo ja palauttaa maakunnat -dropvalikon\n  const luoMaakuntaValikko = () => {\n    let selectBox = document.getElementById(\"inputMaakunnat\");\n    const options = Object.values(maakunnat).map((maakunta, index) => (\n      <p\n        key={index}\n        className=\"valinnat\"\n        onClick={(e) => {\n          selectBox.value = e.target.innerHTML;\n          setValittuMaakunta(e.target.innerHTML);\n          selectBox.focus();\n          setToggleMaakunnatClick(false);\n        }}\n      >\n        {maakunta}\n      </p>\n    ));\n\n    return (\n      <animated.div\n        style={maakunnatFade}\n        id={\"maakunnatContainer\"}\n        className=\"options\"\n      >\n        {options}\n      </animated.div>\n    );\n  };\n\n  // Luo ja palauttaa tyypit -dropvalikon\n  const luoTyypitValikko = () => {\n    let selectBox = document.getElementById(\"inputTyypit\");\n    const options = Object.values(tyypit).map((tyyppi, index) => (\n      <p\n        key={index}\n        className=\"valinnat\"\n        onClick={(e) => {\n          selectBox.value = e.target.innerHTML;\n          setValittuTyyppi(e.target.innerHTML);\n          selectBox.focus();\n          setToggleTyypitClick(false);\n        }}\n      >\n        {tyyppi}\n      </p>\n    ));\n\n    return (\n      <animated.div\n        style={tyypitFade}\n        id={\"tyypitContainer\"}\n        className=\"options\"\n      >\n        {options}\n      </animated.div>\n    );\n  };\n\n  // Palauttaa ohjelman\n  return (\n    <div className=\"app-container\">\n      {!isLoading ? (\n        <div>\n          <input\n            id={\"inputMaakunnat\"}\n            type={\"text\"}\n            value={valittuMaakunta}\n            onClick={() => /* naytaMaakunnat() */ {\n              /* setNaytaMaakuntaValikko(true); */\n              setToggleMaakunnatClick(!toggleMaakunnatClick);\n            }}\n            placeholder={\"Valitse maakunta\"}\n            readOnly\n          ></input>\n          {luoMaakuntaValikko()}\n\n          <input\n            id={\"inputTyypit\"}\n            inputMode={\"text\"}\n            value={valittuTyyppi}\n            onClick={() => {\n              setToggleTyypitClick(!toggleTyypitClick);\n            }}\n            placeholder={\"Valitse tyyppi\"}\n            readOnly\n          ></input>\n\n          {luoTyypitValikko()}\n\n          {maakunnat.length > 0 &&\n            tyypit.length > 0 &&\n            paikat &&\n            rajatutPaikat && (\n              <div className=\"map-chart-wrapper\">\n                <Map\n                  className=\"map\"\n                  maakunta={valittuMaakunta}\n                  tyyppi={valittuTyyppi}\n                  kaikkiPaikat={[...paikatMaakunnassa]}\n                  rajatutPaikat={[...rajatutPaikat]}\n                  newLat={newLat}\n                  newLong={newLong}\n                ></Map>\n                <div className=\"chart-wrapper\">\n                  <BarChart\n                    tyypit={[...tyypit]}\n                    paikatMaakunnassa={chartData}\n                    rajatutPaikat={rajatutPaikat}\n                  ></BarChart>\n\n                  <PieChart\n                    paikat={[...tyypit]}\n                    paikatMaakunnassa={chartData}\n                  ></PieChart>\n                </div>\n              </div>\n            )}\n        </div>\n      ) : (\n        <div\n          style={{\n            position: \"relative\",\n            top: 300,\n            color: \"white\",\n            fontSize: \"30px\",\n            textAlign: \"center\",\n          }}\n        >\n          <BeatLoader size={50} color=\"white\" loading></BeatLoader>\n          <br />\n          Loading...\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}